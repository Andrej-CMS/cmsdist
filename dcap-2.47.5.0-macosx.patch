diff --git a/src/dcap_dirent.c b/src/dcap_dirent.c
index b5adf46..a44041e 100644
--- a/src/dcap_dirent.c
+++ b/src/dcap_dirent.c
@@ -58,13 +58,17 @@ struct __dirstream   {
 
 #endif
 
-#ifdef sun
+#if defined(sun)
 
 #define DIRENT_FD(x) x->dd_fd
 #define DIRENT_DATA(x) x->dd_buf
 
 #endif
 
+#if defined(__APPLE__)
+#define DIRENT_FD(x) x->__dd_fd
+#define DIRENT_DATA(x) x->__dd_buf
+#endif
 
 DIR * dc_opendir(const char *path)
 {
@@ -156,11 +160,11 @@ struct dirent *dc_readdir( DIR *dir)
 	}
 
 	memcpy(ent.d_name, ep->d_name, 256);
-#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__)
+#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__APPLE__)
 	ent.d_type = ep->d_type;
 #endif
 	ent.d_reclen = ep->d_reclen;
-#if !defined(__GNU__) && !defined(__FreeBSD_kernel__)
+#if !defined(__GNU__) && !defined(__FreeBSD_kernel__) && !defined(__APPLE__)
 	ent.d_off = (off_t)ep->d_off;
 #endif
 	ent.d_ino = (ino_t)ep->d_ino;
diff --git a/src/dcap_open.c b/src/dcap_open.c
index 61ccb20..9069234 100644
--- a/src/dcap_open.c
+++ b/src/dcap_open.c
@@ -123,7 +123,9 @@ dc_open(const char *fname, int flags,...)
 								 * with Disk Cache */
 				free(path);
 				dc_debug(DC_INFO, "Using system native open for %s.", fname);
+#ifdef O_LARGEFILE
 			    flags |= O_LARGEFILE ;
+#endif
 				return system_open(fname, flags, mode);
 		}
 
@@ -210,7 +212,9 @@ dc_open(const char *fname, int flags,...)
 	 * dCache always has LARGE FILE SUPPORT,
 	 * remove extra flag, while it makes trouble in ascii open
 	 */
+#ifdef O_LARGEFILE
 	node->flags =  flags & ~O_LARGEFILE;
+#endif
 	node->mode = mode;
 
 	if(url == NULL) {
diff --git a/src/dcap_preload64.c b/src/dcap_preload64.c
index 9d90d4c..8565a8d 100644
--- a/src/dcap_preload64.c
+++ b/src/dcap_preload64.c
@@ -30,8 +30,10 @@
 #include "dcap.h"
 #include "debug_level.h"
 
-/* Replacing system calls with our if we are PRELOAD library */
+// MacosX does not have a special API for 64bit.
+#ifndef __APPLE__
 
+/* Replacing system calls with our if we are PRELOAD library */
 
 /*
  *  work around linux glibc header files mess:
@@ -41,12 +43,12 @@
 
 int open64(const char *path, int flags,...)
 {
-	mode_t mode = 0;
+	int mode = 0;
 	va_list    args;
 
 	if (flags & O_CREAT) {
 		va_start(args, flags);
-		mode = va_arg(args, mode_t);
+		mode = va_arg(args, int);
 		va_end(args);
 	}
 
@@ -147,3 +149,4 @@ off64_t ftello64 (FILE *stream )
 	dc_debug(DC_TRACE, "Running preloaded ftello64");
 	return dc_ftello64( stream );
 }
+#endif
\ No newline at end of file
diff --git a/src/dcap_stream.c b/src/dcap_stream.c
index d13a7e0..4f1fc88 100644
--- a/src/dcap_stream.c
+++ b/src/dcap_stream.c
@@ -83,7 +83,7 @@ int dc_feof(FILE *fp)
 		return system_feof(fp);
 	}
 
-#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__CYGWIN__)
+#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__CYGWIN__) || defined(__APPLE__)
 	if ( ((FILE *)fp)->_flags & _IO_EOF_SEEN ) {
 #else
 	if ( ((FILE *)fp)->_flag & _IOEOF ) {
@@ -140,6 +140,8 @@ FILE   *dc_fopen64(const char *file, const char *mode)
 		fp->_IO_write_base = NULL;
 		fp->_lock = NULL;
 		fp->_flags = 0;
+        #elif defined(__APPLE__)
+                fp->_flags = 0;
 	#else
 		fp->_flag = 0;
 	#endif
@@ -182,6 +184,8 @@ FILE   *dc_fdopen(int fd, const char *mode)
 	fp->_IO_write_ptr = NULL;
 	fp->_IO_write_base = NULL;
 	fp->_flags = 0;
+#elif defined(__APPLE__)
+	fp->_flags = 0;
 #else
 	fp->_flag = 0;
 #endif
@@ -207,7 +211,7 @@ size_t dc_fread(void *ptr, size_t size, size_t items, FILE *fp)
 	switch(rc) {
 		case -1:
 		case 0:
-#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__CYGWIN__)
+#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__CYGWIN__) || defined(__APPLE__)
 			((FILE *)fp)->_flags |= _IO_EOF_SEEN;
 #else
 			((FILE *)fp)->_flag |= _IOEOF;
@@ -308,7 +312,7 @@ size_t dc_fwrite(const void *ptr, size_t size, size_t items, FILE *fp)
 
 	switch(rc) {
 		case -1:
-#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__CYGWIN__)
+#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__CYGWIN__) || defined(__APPLE__)
 			((FILE *)fp)->_flags |= _IO_ERR_SEEN ;
 #else
 			((FILE *)fp)->_flag |= _IOERR ;
@@ -316,7 +320,7 @@ size_t dc_fwrite(const void *ptr, size_t size, size_t items, FILE *fp)
 			rc= 0 ;
 			break ;
 		case 0:
-#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__CYGWIN__)
+#if defined(__linux__) || defined(__GNU__) || defined(__FreeBSD_kernel__) || defined(__CYGWIN__) || defined(__APPLE__)
 			((FILE *)fp)->_flags |= _IO_EOF_SEEN ;
 #else
 			((FILE *)fp)->_flag |= _IOEOF ;
diff --git a/src/dcap_types.h b/src/dcap_types.h
index 142b57d..a8c8393 100644
--- a/src/dcap_types.h
+++ b/src/dcap_types.h
@@ -36,6 +36,10 @@ typedef int int32_t;
 typedef long int64_t;
 #endif /* alpha */
 
+#ifdef __APPLE__
+#define off64_t off_t
+#endif
+
 typedef struct {
 
 	int32_t         code;
diff --git a/src/print_size.h b/src/print_size.h
index cc4b7ee..919beac 100644
--- a/src/print_size.h
+++ b/src/print_size.h
@@ -16,0 +16,3 @@
+#ifdef __APPLE__
+#define off64_t off_t
+#endif
diff --git a/src/system_io.c b/src/system_io.c
index 6619b3e..67d00a0 100644
--- a/src/system_io.c
+++ b/src/system_io.c
@@ -34,6 +34,10 @@
 static MUTEX(gLock);
 static void *handle;
 
+#ifdef __APPLE__
+#define off64_t off_t
+#endif
+
 /*
  *  Convert from (void *) to different function pointer
  *  types.  For details why this is necessary, please
diff --git a/src/system_io.h b/src/system_io.h
index e6fc01d..34ab6e6 100644
--- a/src/system_io.h
+++ b/src/system_io.h
@@ -28,6 +28,12 @@
 
 #include <stdio.h>
 
+#ifdef __APPLE__
+/* MACOSX API is 64 bit clean. No need for "64" suffix. */
+typedef off_t off64_t;
+#define stat64 stat
+#endif
+
 extern int system_open(const char *, int, mode_t);
 extern int system_read(int, void *, size_t);
 extern int system_readv(int, const struct iovec *vector, int count);
diff --git a/src/dcap.h.in b/src/dcap.h.in
index c1ed276..06a6155 100644
--- a/src/dcap.h.in
+++ b/src/dcap.h.in
@@ -33,6 +33,11 @@
 #endif /* WIN32 */
 #include <dcap_errno.h>
 
+#ifdef __APPLE__
+#define stat64 stat
+#define off64_t off_t
+#define dirent64 dirent
+#endif
 
 #ifdef  __cplusplus
 extern "C" {
