diff -arupN Rivet-1.5.1.orig/include/Rivet/Math/eigen/ludecomposition.h Rivet-1.5.1/include/Rivet/Math/eigen/ludecomposition.h
--- Rivet-1.5.1.orig/include/Rivet/Math/eigen/ludecomposition.h	2012-03-07 11:16:13.000000000 +0100
+++ Rivet-1.5.1/include/Rivet/Math/eigen/ludecomposition.h	2012-03-07 11:17:24.000000000 +0100
@@ -85,7 +85,7 @@ class LUDecomposition
 public:
 
     /** Performs the LU Decomposition of mat. Use this constructor. */
-    LUDecomposition( const Matrix<T, Size> & mat ) { perform( mat ); }
+    LUDecomposition( const Matrix<T, Size> & mat ) { this->perform( mat ); }
 
 protected:
     /** Default constructor. Does nothing. \internal
@@ -128,7 +128,7 @@ class LUDecompositionX
 
 public:
     /** Performs the LU Decomposition of mat. Use this constructor. */
-    LUDecompositionX( const MatrixX<T> & mat ) { perform( mat ); }
+    LUDecompositionX( const MatrixX<T> & mat ) { this->perform( mat ); }
 
 protected:
     /** Default constructor. Does nothing. \internal
diff -arupN Rivet-1.5.1.orig/include/Rivet/Math/eigen/matrix.h Rivet-1.5.1/include/Rivet/Math/eigen/matrix.h
--- Rivet-1.5.1.orig/include/Rivet/Math/eigen/matrix.h	2012-03-07 11:16:13.000000000 +0100
+++ Rivet-1.5.1/include/Rivet/Math/eigen/matrix.h	2012-03-07 11:21:19.000000000 +0100
@@ -170,7 +170,7 @@ public:
       */
     Matrix( const Matrix & other )
     {
-        readArray( other.array() );
+        this->readArray( other.array() );
     }
 
     /**
@@ -179,7 +179,7 @@ public:
       */
     Matrix( const T * array )
     {
-        readArray( array );
+        this->readArray( array );
     }
 
     /**
diff -arupN Rivet-1.5.1.orig/include/Rivet/Math/eigen/vector.h Rivet-1.5.1/include/Rivet/Math/eigen/vector.h
--- Rivet-1.5.1.orig/include/Rivet/Math/eigen/vector.h	2012-03-07 11:16:13.000000000 +0100
+++ Rivet-1.5.1/include/Rivet/Math/eigen/vector.h	2012-03-07 11:24:20.000000000 +0100
@@ -141,7 +141,7 @@ public:
       */
     Vector( const Vector &v )
     {
-        readArray( v.array() );
+        this->readArray( v.array() );
     }
 
     /**
@@ -149,7 +149,7 @@ public:
       */
     Vector( const T *array )
     {
-        readArray( array );
+        this->readArray( array );
     }
 
     /**
@@ -160,7 +160,7 @@ public:
     Vector( int unused_size, const T *array )
     {
         assert( unused_size == this->size() );
-        readArray( array );
+        this->readArray( array );
     }
 
     /**
@@ -312,7 +312,7 @@ public:
     VectorX( const VectorX & other )
     {
         init( other._size() );
-        readArray( other.array() );
+        this->readArray( other.array() );
     }
 
     /**
@@ -328,7 +328,7 @@ public:
     VectorX( int size, const T * array )
     {
         init( size );
-        readArray( array );
+        this->readArray( array );
     }
 
     ~VectorX()
