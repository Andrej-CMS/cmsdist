diff -Naur evtgenlhc.ORIG/9.1/EvtGen/EvtGen.hh evtgenlhc/9.1/EvtGen/EvtGen.hh
--- evtgenlhc.ORIG/9.1/EvtGen/EvtGen.hh	2005-06-15 16:37:33.000000000 +0200
+++ evtgenlhc/9.1/EvtGen/EvtGen.hh	2009-01-26 11:10:59.279482451 +0100
@@ -54,9 +54,9 @@
   void generateDecay(EvtParticle *p);
 
   //These two methods are obsolete
-  void generateEvent(int stdhepid, HepLorentzVector P, 
-                     HepLorentzVector D);
-  void generateEvent(EvtParticle *p,HepLorentzVector D);
+  void generateEvent(int stdhepid, CLHEP::HepLorentzVector P, 
+                     CLHEP::HepLorentzVector D);
+  void generateEvent(EvtParticle *p,CLHEP::HepLorentzVector D);
 
   
 private:
diff -Naur evtgenlhc.ORIG/9.1/EvtGenModels/EvtBtoXsgammaFermiUtil.hh evtgenlhc/9.1/EvtGenModels/EvtBtoXsgammaFermiUtil.hh
--- evtgenlhc.ORIG/9.1/EvtGenModels/EvtBtoXsgammaFermiUtil.hh	2003-10-02 19:26:50.000000000 +0200
+++ evtgenlhc/9.1/EvtGenModels/EvtBtoXsgammaFermiUtil.hh	2009-01-26 11:15:21.818029199 +0100
@@ -38,21 +38,21 @@
   virtual ~EvtBtoXsgammaFermiUtil() { };
 
   //Exponential function
-  static double FermiExpFunc(double var, const HepVector &coeffs);
+  static double FermiExpFunc(double var, const CLHEP::HepVector &coeffs);
 
   //Gaussian function and its helper functions
-  static double FermiGaussFunc(double, HepVector const &coeffs);
-  static double FermiGaussFuncRoot(double, double, double, HepVector &coeffs);
-  static double FermiGaussRootFcnA(double, const HepVector &coeffs1, const HepVector &coeffs2);
-  static double FermiGaussRootFcnB(double, const HepVector &coeffs1, const HepVector &coeffs2);
-  static double Gamma(double, const HepVector &coeffs);
+  static double FermiGaussFunc(double, CLHEP::HepVector const &coeffs);
+  static double FermiGaussFuncRoot(double, double, double, CLHEP::HepVector &coeffs);
+  static double FermiGaussRootFcnA(double, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2);
+  static double FermiGaussRootFcnB(double, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2);
+  static double Gamma(double, const CLHEP::HepVector &coeffs);
 
   //Roman function and its helper functions
   static double BesselI1(double);
   static double BesselK1(double);
   static double FermiRomanFuncRoot(double, double);
   static double FermiRomanRootFcnA(double);
-  static double FermiRomanFunc(double, HepVector const &coeffs);
+  static double FermiRomanFunc(double, CLHEP::HepVector const &coeffs);
 
 };
 
diff -Naur evtgenlhc.ORIG/9.1/EvtGenModels/EvtBtoXsgammaKagan.hh evtgenlhc/9.1/EvtGenModels/EvtBtoXsgammaKagan.hh
--- evtgenlhc.ORIG/9.1/EvtGenModels/EvtBtoXsgammaKagan.hh	2003-10-02 19:26:50.000000000 +0200
+++ evtgenlhc/9.1/EvtGenModels/EvtBtoXsgammaKagan.hh	2009-01-26 11:16:06.635638463 +0100
@@ -96,28 +96,28 @@
   double _alphasmubar;
   double _etamu;
 
-  HepVector _mHVect;
+  CLHEP::HepVector _mHVect;
 
   static double ReG(double);
   static double ImG(double);
   static double s77(double);
   static double s88(double, double, double);
   static double s78(double);
-  static double s22Func(double var, const HepVector &coeffs);
-  static double s27Func(double var, const HepVector &coeffs);
+  static double s22Func(double var, const CLHEP::HepVector &coeffs);
+  static double s27Func(double var, const CLHEP::HepVector &coeffs);
 
   static double Delta(double, double);
-  static double DeltaFermiFunc(double, const HepVector &coeffs1, const HepVector &coeffs2, const HepVector &coeffs3);
-  static double s77FermiFunc(double, const HepVector &coeffs1, const HepVector &coeffs2);
-  static double s88FermiFunc(double, const HepVector &coeffs1, const HepVector &coeffs2, const HepVector &coeffs3);
-  static double s78FermiFunc(double, const HepVector &coeffs1, const HepVector &coeffs2);
-  static double s22FermiFunc(double, HepVector &coeffs);
-  static double s27FermiFunc(double, HepVector &coeffs);
-  static double s28FermiFunc(double, HepVector &coeffs);
-  static double GetArrayVal(double, double, double, double, HepVector);
-  static double sFermiFunc(double, const HepVector &coeffs1, const HepVector &coeffs2, 
-			   const HepVector &coeffs3, const HepVector &coeffs4);
-  static double FermiFunc(double, const HepVector &coeffs);
+  static double DeltaFermiFunc(double, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3);
+  static double s77FermiFunc(double, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2);
+  static double s88FermiFunc(double, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3);
+  static double s78FermiFunc(double, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2);
+  static double s22FermiFunc(double, CLHEP::HepVector &coeffs);
+  static double s27FermiFunc(double, CLHEP::HepVector &coeffs);
+  static double s28FermiFunc(double, CLHEP::HepVector &coeffs);
+  static double GetArrayVal(double, double, double, double, CLHEP::HepVector);
+  static double sFermiFunc(double, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2, 
+			   const CLHEP::HepVector &coeffs3, const CLHEP::HepVector &coeffs4);
+  static double FermiFunc(double, const CLHEP::HepVector &coeffs);
   static double diLogFunc(double);
   static double diLogMathematica(double);
   double *massHad; double *brHad;
diff -Naur evtgenlhc.ORIG/9.1/EvtGenModels/EvtHepRandomEngine.hh evtgenlhc/9.1/EvtGenModels/EvtHepRandomEngine.hh
--- evtgenlhc.ORIG/9.1/EvtGenModels/EvtHepRandomEngine.hh	2005-11-20 23:02:37.000000000 +0100
+++ evtgenlhc/9.1/EvtGenModels/EvtHepRandomEngine.hh	2009-01-26 11:27:38.110941102 +0100
@@ -24,11 +24,10 @@
 #ifndef EVTHEPRANDOMENGINE_HH
 #define EVTHEPRANDOMENGINE_HH
 
-#include "CLHEP/config/CLHEP.h"
 #include "CLHEP/Random/RandomEngine.h"
 #include "EvtGenBase/EvtRandomEngine.hh"
 
-class EvtHepRandomEngine:public  HepRandomEngine, public EvtRandomEngine  {
+class EvtHepRandomEngine:public  CLHEP::HepRandomEngine, public EvtRandomEngine  {
 
 public:
   
@@ -38,14 +37,15 @@
 
   virtual double random();
 
-  virtual HepDouble flat();
+  virtual double flat();
 
   void showStatus() const;
   void restoreStatus(const char filename[]) ;
   void saveStatus(const char filename[]) const;
   void setSeeds(const long* a, int b);
   void setSeed(long a, int b);
-  void flatArray(const HepInt s, HepDouble* vect);
+
+  void flatArray(const int s, double* vect);
   
   virtual std::string name() const ;
 };
diff -Naur evtgenlhc.ORIG/9.1/EvtGenModels/EvtItgFourCoeffFcn.hh evtgenlhc/9.1/EvtGenModels/EvtItgFourCoeffFcn.hh
--- evtgenlhc.ORIG/9.1/EvtGenModels/EvtItgFourCoeffFcn.hh	2003-10-02 19:26:51.000000000 +0200
+++ evtgenlhc/9.1/EvtGenModels/EvtItgFourCoeffFcn.hh	2009-01-26 11:17:52.449549239 +0100
@@ -29,8 +29,8 @@
 
 public:
 
-  EvtItgFourCoeffFcn( double (*theFunction)(double, const HepVector &, const HepVector &, const HepVector &, const HepVector &),
-		     double lowerRange, double upperRange, const HepVector &coeffs1, const HepVector &coeffs2, const HepVector &coeffs3, const HepVector &coeffs4);
+  EvtItgFourCoeffFcn( double (*theFunction)(double, const CLHEP::HepVector &, const CLHEP::HepVector &, const CLHEP::HepVector &, const CLHEP::HepVector &),
+		     double lowerRange, double upperRange, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3, const CLHEP::HepVector &coeffs4);
 
   virtual ~EvtItgFourCoeffFcn( );
 
@@ -44,16 +44,16 @@
 private:
  
   // Data members
-  double (*_myFunction)(double x, const HepVector & coeffs1, const HepVector & coeffs2, const HepVector & coeffs3, const HepVector & coeffs4);
+  double (*_myFunction)(double x, const CLHEP::HepVector & coeffs1, const CLHEP::HepVector & coeffs2, const CLHEP::HepVector & coeffs3, const CLHEP::HepVector & coeffs4);
   
   // Note: if your class needs a copy constructor or an assignment operator, 
   //  make one of the following public and implement it.
   EvtItgFourCoeffFcn( const EvtItgFourCoeffFcn& );                //// Copy Constructor
   EvtItgFourCoeffFcn& operator= ( const EvtItgFourCoeffFcn& );    // Assignment op
-  HepVector _coeffs1;
-  HepVector _coeffs2;
-  HepVector _coeffs3;
-  HepVector _coeffs4;
+  CLHEP::HepVector _coeffs1;
+  CLHEP::HepVector _coeffs2;
+  CLHEP::HepVector _coeffs3;
+  CLHEP::HepVector _coeffs4;
 
 };
 
diff -Naur evtgenlhc.ORIG/9.1/EvtGenModels/EvtItgPtrFunction.hh evtgenlhc/9.1/EvtGenModels/EvtItgPtrFunction.hh
--- evtgenlhc.ORIG/9.1/EvtGenModels/EvtItgPtrFunction.hh	2003-10-02 19:26:51.000000000 +0200
+++ evtgenlhc/9.1/EvtGenModels/EvtItgPtrFunction.hh	2009-01-26 11:22:12.958361278 +0100
@@ -31,8 +31,8 @@
 
 public:
 
-  EvtItgPtrFunction( double (*theFunction)(double, const HepVector &),
-		     double lowerRange, double upperRange, const HepVector &coeffs1);
+  EvtItgPtrFunction( double (*theFunction)(double, const CLHEP::HepVector &),
+		     double lowerRange, double upperRange, const CLHEP::HepVector &coeffs1);
  
   virtual ~EvtItgPtrFunction( );
 
@@ -46,13 +46,13 @@
 private:
  
   // Data members
-  double (*_myFunction)(double x, const HepVector & coeffs1);
+  double (*_myFunction)(double x, const CLHEP::HepVector & coeffs1);
 
   // Note: if your class needs a copy constructor or an assignment operator, 
   //  make one of the following public and implement it.
   EvtItgPtrFunction( const EvtItgPtrFunction& );                //// Copy Constructor
   EvtItgPtrFunction& operator= ( const EvtItgPtrFunction& );    // Assignment op
-  HepVector _coeffs1;
+  CLHEP::HepVector _coeffs1;
 
 };
 
diff -Naur evtgenlhc.ORIG/9.1/EvtGenModels/EvtItgThreeCoeffFcn.hh evtgenlhc/9.1/EvtGenModels/EvtItgThreeCoeffFcn.hh
--- evtgenlhc.ORIG/9.1/EvtGenModels/EvtItgThreeCoeffFcn.hh	2003-10-02 19:26:52.000000000 +0200
+++ evtgenlhc/9.1/EvtGenModels/EvtItgThreeCoeffFcn.hh	2009-01-26 11:18:54.773658762 +0100
@@ -36,8 +36,8 @@
 
 public:
 
-  EvtItgThreeCoeffFcn( double (*theFunction)(double, const HepVector &, const HepVector &, const HepVector &),
-		       double lowerRange, double upperRange, const HepVector &coeffs1, const HepVector &coeffs2, const HepVector &coeffs3);
+  EvtItgThreeCoeffFcn( double (*theFunction)(double, const CLHEP::HepVector &, const CLHEP::HepVector &, const CLHEP::HepVector &),
+		       double lowerRange, double upperRange, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3);
   
  
   virtual ~EvtItgThreeCoeffFcn( );
@@ -51,15 +51,15 @@
 private:
  
   // Data members
-  double (*_myFunction)(double x, const HepVector & coeffs1, const HepVector & coeffs2, const HepVector & coeffs3);
+  double (*_myFunction)(double x, const CLHEP::HepVector & coeffs1, const CLHEP::HepVector & coeffs2, const CLHEP::HepVector & coeffs3);
 
   // Note: if your class needs a copy constructor or an assignment operator, 
   //  make one of the following public and implement it.
    EvtItgThreeCoeffFcn( const EvtItgThreeCoeffFcn& );                //// Copy Constructor
   EvtItgThreeCoeffFcn& operator= ( const EvtItgThreeCoeffFcn& );    // Assignment op
-  HepVector _coeffs1;
-  HepVector _coeffs2;
-  HepVector _coeffs3;
+  CLHEP::HepVector _coeffs1;
+  CLHEP::HepVector _coeffs2;
+  CLHEP::HepVector _coeffs3;
   
 };
 
diff -Naur evtgenlhc.ORIG/9.1/EvtGenModels/EvtItgTwoCoeffFcn.hh evtgenlhc/9.1/EvtGenModels/EvtItgTwoCoeffFcn.hh
--- evtgenlhc.ORIG/9.1/EvtGenModels/EvtItgTwoCoeffFcn.hh	2003-10-02 19:26:52.000000000 +0200
+++ evtgenlhc/9.1/EvtGenModels/EvtItgTwoCoeffFcn.hh	2009-01-26 11:19:18.683244695 +0100
@@ -36,8 +36,8 @@
 
 public:
 
-  EvtItgTwoCoeffFcn( double (*theFunction)(double, const HepVector &, const HepVector &),
-		     double lowerRange, double upperRange, const HepVector &coeffs1, const HepVector &coeffs2);
+  EvtItgTwoCoeffFcn( double (*theFunction)(double, const CLHEP::HepVector &, const CLHEP::HepVector &),
+		     double lowerRange, double upperRange, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2);
 
   virtual ~EvtItgTwoCoeffFcn( );
 
@@ -52,15 +52,15 @@
 private:
  
   // Data members
-  double (*_myFunction)(double x, const HepVector & coeffs1, const HepVector & coeffs2);
+  double (*_myFunction)(double x, const CLHEP::HepVector & coeffs1, const CLHEP::HepVector & coeffs2);
 
   // Note: if your class needs a copy constructor or an assignment operator, 
   // make one of the following public and implement it.
    EvtItgTwoCoeffFcn( const EvtItgTwoCoeffFcn& );                //// Copy Constructor
   EvtItgTwoCoeffFcn& operator= ( const EvtItgTwoCoeffFcn& );    // Assignment op
  
-  HepVector _coeffs1;
-  HepVector _coeffs2;
+  CLHEP::HepVector _coeffs1;
+  CLHEP::HepVector _coeffs2;
 
 };
 
diff -Naur evtgenlhc.ORIG/9.1/EvtGenModels/EvtVub.hh evtgenlhc/9.1/EvtGenModels/EvtVub.hh
--- evtgenlhc.ORIG/9.1/EvtGenModels/EvtVub.hh	2005-06-15 16:37:33.000000000 +0200
+++ evtgenlhc/9.1/EvtGenModels/EvtVub.hh	2009-01-26 11:19:45.350436926 +0100
@@ -58,7 +58,7 @@
   double * _weights;
 
   EvtVubdGamma *_dGamma; // calculates the decay rate
-  RandGeneral *_pFermi; // calculates the Fermi Motion
+  CLHEP::RandGeneral *_pFermi; // calculates the Fermi Motion
   
 };
 
diff -Naur evtgenlhc.ORIG/9.1/src/EvtBtoXsgammaFermiUtil.cpp evtgenlhc/9.1/src/EvtBtoXsgammaFermiUtil.cpp
--- evtgenlhc.ORIG/9.1/src/EvtBtoXsgammaFermiUtil.cpp	2004-07-12 18:13:28.000000000 +0200
+++ evtgenlhc/9.1/src/EvtBtoXsgammaFermiUtil.cpp	2009-01-26 11:20:56.043343079 +0100
@@ -35,7 +35,7 @@
 #include <iostream>
 #include <math.h>
 
-double EvtBtoXsgammaFermiUtil::FermiExpFunc(double y, const HepVector &coeffs) {
+double EvtBtoXsgammaFermiUtil::FermiExpFunc(double y, const CLHEP::HepVector &coeffs) {
 
   //coeffs: 1 = lambdabar, 2 = a, 3 = lam1, 4 = norm
   // report(INFO,"EvtGen")<<coeffs[4]<<std::endl;
@@ -43,17 +43,17 @@
 
 }
 
-double EvtBtoXsgammaFermiUtil::FermiGaussFunc(double y, const HepVector &coeffs) {
+double EvtBtoXsgammaFermiUtil::FermiGaussFunc(double y, const CLHEP::HepVector &coeffs) {
 
   //coeffs: 1 = lambdabar, 2 = a, 3 = c, 4 = norm
   return (pow(1. - (y/coeffs[1]),coeffs[2])*exp(-pow(coeffs[3],2.)*pow(1. - (y/coeffs[1]),2.)))/coeffs[4];
 
 }
 
-double EvtBtoXsgammaFermiUtil::FermiGaussFuncRoot(double lambdabar, double lam1, double mb, HepVector &gammaCoeffs) {
+double EvtBtoXsgammaFermiUtil::FermiGaussFuncRoot(double lambdabar, double lam1, double mb, CLHEP::HepVector &gammaCoeffs) {
  
-  HepVector coeffs1(3);
-  HepVector coeffs2(3);
+  CLHEP::HepVector coeffs1(3);
+  CLHEP::HepVector coeffs2(3);
 
   coeffs1[0]=0.2;
   coeffs1[1]=lambdabar;
@@ -77,7 +77,7 @@
 
 }
 
-double EvtBtoXsgammaFermiUtil::FermiGaussRootFcnA(double y, const HepVector &coeffs1, const HepVector &coeffs2) {
+double EvtBtoXsgammaFermiUtil::FermiGaussRootFcnA(double y, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2) {
 
   
   //coeffs1: 0=ap, 1=lambdabar, coeffs2=gamma function coeffs
@@ -87,7 +87,7 @@
 
 }
 
-double EvtBtoXsgammaFermiUtil::FermiGaussRootFcnB(double y, const HepVector &coeffs1, const HepVector &coeffs2) {
+double EvtBtoXsgammaFermiUtil::FermiGaussRootFcnB(double y, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2) {
 
   //coeffs1: 0=ap, 1=lambdabar, coeffs2=gamma function coeffs
   double cp = Gamma((2.0 + coeffs1[0])/2., coeffs2)/Gamma((1.0 + coeffs1[0])/2., coeffs2);
@@ -95,7 +95,7 @@
 
 }
 
-double EvtBtoXsgammaFermiUtil::Gamma(double z, const HepVector &coeffs) {
+double EvtBtoXsgammaFermiUtil::Gamma(double z, const CLHEP::HepVector &coeffs) {
 
   //Lifted from Numerical Recipies in C
   double x, y, tmp, ser;
@@ -182,7 +182,7 @@
    return EvtConst::pi*(2. + y)*pow(y,-2.)*exp(-y)*pow(BesselK1(y/2.),-2.);
 
 }
-double EvtBtoXsgammaFermiUtil::FermiRomanFunc(double y, const HepVector &coeffs) {
+double EvtBtoXsgammaFermiUtil::FermiRomanFunc(double y, const CLHEP::HepVector &coeffs) {
   if (y == (coeffs[1]-coeffs[2])) y=0.99999999*(coeffs[1]-coeffs[2]);
 
   //coeffs: 1 = mB, 2=mb, 3=rho, 4=lambdabar, 5=norm
diff -Naur evtgenlhc.ORIG/9.1/src/EvtBtoXsgammaKagan.cpp evtgenlhc/9.1/src/EvtBtoXsgammaKagan.cpp
--- evtgenlhc.ORIG/9.1/src/EvtBtoXsgammaKagan.cpp	2007-09-21 16:03:36.000000000 +0200
+++ evtgenlhc/9.1/src/EvtBtoXsgammaKagan.cpp	2009-01-26 11:21:42.593696633 +0100
@@ -177,7 +177,7 @@
   _z = args[7];
   _nIntervalS = args[8];
   _nIntervalmH = args[9];
-  HepVector mHVect(int(_nIntervalmH+1.0));
+  CLHEP::HepVector mHVect(int(_nIntervalmH+1.0));
   massHad = new double[int(_nIntervalmH+1.0)];
   brHad = new double[int(_nIntervalmH+1.0)];
   intervalMH=_nIntervalmH;
@@ -232,14 +232,14 @@
   
   //Build s22 and s27 vector - saves time because double
   //integration is required otherwise
-  HepVector s22Coeffs(int(_nIntervalS+1.0));
-  HepVector s27Coeffs(int(_nIntervalS+1.0));
-  HepVector s28Coeffs(int(_nIntervalS+1.0));
+  CLHEP::HepVector s22Coeffs(int(_nIntervalS+1.0));
+  CLHEP::HepVector s27Coeffs(int(_nIntervalS+1.0));
+  CLHEP::HepVector s28Coeffs(int(_nIntervalS+1.0));
   
   double dy = (yMax - yMin)/_nIntervalS;
   double yp = yMin;
   
-  HepVector sCoeffs(1);
+  CLHEP::HepVector sCoeffs(1);
   sCoeffs[0] = _z;
   
   //Define s22 and s27 functions
@@ -273,11 +273,11 @@
   //Define functions and vectors used to calculate mHVect. 
   // Each function takes a set
   //of vectors which are used as the function coefficients
-  HepVector FermiCoeffs(6);
-  HepVector varCoeffs(3);
-  HepVector DeltaCoeffs(1);
-  HepVector s88Coeffs(2);
-  HepVector sInitCoeffs(3);
+  CLHEP::HepVector FermiCoeffs(6);
+  CLHEP::HepVector varCoeffs(3);
+  CLHEP::HepVector DeltaCoeffs(1);
+  CLHEP::HepVector s88Coeffs(2);
+  CLHEP::HepVector sInitCoeffs(3);
   
   varCoeffs[0] = _mB;
   varCoeffs[1] = _mb;
@@ -300,7 +300,7 @@
   FermiCoeffs[5]=0.0;
   
   //Coefficients for gamma function
-  HepVector gammaCoeffs(6);
+  CLHEP::HepVector gammaCoeffs(6);
   gammaCoeffs[0]=76.18009172947146;
   gammaCoeffs[1]=-86.50532032941677;
   gammaCoeffs[2]=24.01409824083091;
@@ -754,7 +754,7 @@
   }
 }
 
-double EvtBtoXsgammaKagan::s22Func(double y, const HepVector &coeffs) {
+double EvtBtoXsgammaKagan::s22Func(double y, const CLHEP::HepVector &coeffs) {
 
   //coeffs[0]=z
   return (1. - y)*((pow(coeffs[0],2.)/pow(y,2.))*(pow(ReG(y/coeffs[0]),2.)
@@ -762,15 +762,15 @@
   
 }
 
-double EvtBtoXsgammaKagan::s27Func(double y, const HepVector &coeffs) {
+double EvtBtoXsgammaKagan::s27Func(double y, const CLHEP::HepVector &coeffs) {
  
   //coeffs[0] = z
   return (ReG(y/coeffs[0]) + y/(2.*coeffs[0]));
 
 }
 
-double EvtBtoXsgammaKagan::DeltaFermiFunc(double y, const HepVector &coeffs1, 
-					const HepVector &coeffs2, const HepVector &coeffs3) {
+double EvtBtoXsgammaKagan::DeltaFermiFunc(double y, const CLHEP::HepVector &coeffs1, 
+					const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3) {
  
   //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
   //coeffs2[2]=ymH, coeffs3[0]=DeltaCoeff (alphasmu)
@@ -780,8 +780,8 @@
 
 }
 
-double EvtBtoXsgammaKagan::s77FermiFunc(double y, const HepVector &coeffs1, 
-				      const HepVector &coeffs2) {
+double EvtBtoXsgammaKagan::s77FermiFunc(double y, const CLHEP::HepVector &coeffs1, 
+				      const CLHEP::HepVector &coeffs2) {
 
   //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
   //coeffs2[2]=ymH
@@ -790,8 +790,8 @@
 
 }
 
-double EvtBtoXsgammaKagan::s88FermiFunc(double y, const HepVector &coeffs1,  
-				      const HepVector &coeffs2, const HepVector &coeffs3) {
+double EvtBtoXsgammaKagan::s88FermiFunc(double y, const CLHEP::HepVector &coeffs1,  
+				      const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3) {
 
   //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
   //coeffs2[2]=ymH, coeffs3=s88 coeffs
@@ -800,8 +800,8 @@
 
 }
 
-double EvtBtoXsgammaKagan::s78FermiFunc(double y, const HepVector &coeffs1, 
-				      const HepVector &coeffs2) {
+double EvtBtoXsgammaKagan::s78FermiFunc(double y, const CLHEP::HepVector &coeffs1, 
+				      const CLHEP::HepVector &coeffs2) {
 
   //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
   //coeffs2[2]=ymH
@@ -810,9 +810,9 @@
 
 }
 
-double EvtBtoXsgammaKagan::sFermiFunc(double y, const HepVector &coeffs1, 
-				      const HepVector &coeffs2, const HepVector &coeffs3, 
-				      const HepVector &coeffs4) {
+double EvtBtoXsgammaKagan::sFermiFunc(double y, const CLHEP::HepVector &coeffs1, 
+				      const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3, 
+				      const CLHEP::HepVector &coeffs4) {
 
   //coeffs1=fermi function coeffs, coeffs2[0]=mB, coeffs2[1]=mb, 
   //coeffs2[2]=ymH, coeffs3[0]=nIntervals in s22 or s27 array, coeffs3[1]=yMin,
@@ -830,7 +830,7 @@
 
 double EvtBtoXsgammaKagan::GetArrayVal(double xp, double nInterval, 
                                        double xMin, double xMax, 
-                                       HepVector array) {
+                                       CLHEP::HepVector array) {
  
   double dx = (xMax - xMin)/nInterval;
   int bin1 = int(((xp-xMin)/(xMax - xMin))*nInterval);
@@ -872,7 +872,7 @@
   
 }
 
-double EvtBtoXsgammaKagan::FermiFunc(double y, const HepVector &coeffs) {
+double EvtBtoXsgammaKagan::FermiFunc(double y, const CLHEP::HepVector &coeffs) {
 
   //Fermi shape functions :1=exponential, 2=gaussian, 3=roman
   if (int(coeffs[0]) == 1) return 
diff -Naur evtgenlhc.ORIG/9.1/src/EvtGen.cpp evtgenlhc/9.1/src/EvtGen.cpp
--- evtgenlhc.ORIG/9.1/src/EvtGen.cpp	2005-06-15 16:37:33.000000000 +0200
+++ evtgenlhc/9.1/src/EvtGen.cpp	2009-01-26 11:24:28.162058190 +0100
@@ -205,8 +205,8 @@
 
 
 
-void EvtGen::generateEvent(int stdhepid, HepLorentzVector P,
-                           HepLorentzVector D){
+void EvtGen::generateEvent(int stdhepid, CLHEP::HepLorentzVector P,
+                           CLHEP::HepLorentzVector D){
 
   EvtParticle *root_part;
   EvtVectorParticle *vector_part;
@@ -228,7 +228,7 @@
 
 }
 
-void EvtGen::generateEvent(EvtParticle *root_part,HepLorentzVector D){
+void EvtGen::generateEvent(EvtParticle *root_part, CLHEP::HepLorentzVector D){
 
   int i;  
   
diff -Naur evtgenlhc.ORIG/9.1/src/EvtHepRandomEngine.cpp evtgenlhc/9.1/src/EvtHepRandomEngine.cpp
--- evtgenlhc.ORIG/9.1/src/EvtHepRandomEngine.cpp	2005-11-20 23:02:37.000000000 +0100
+++ evtgenlhc/9.1/src/EvtHepRandomEngine.cpp	2009-01-26 11:28:00.091803250 +0100
@@ -35,7 +35,7 @@
   return EvtRandom::Flat();
 }
 
-HepDouble EvtHepRandomEngine::flat()
+double EvtHepRandomEngine::flat()
 {
   return random();
 }
@@ -45,7 +45,7 @@
 void EvtHepRandomEngine::saveStatus(const char /*filename*/[]) const {}
 void EvtHepRandomEngine::setSeeds(const long* /*a*/, int /*b*/) {}
 void EvtHepRandomEngine::setSeed(long /*a*/, int /*b*/) {}
-void EvtHepRandomEngine::flatArray(const HepInt s, HepDouble* vect) 
+void EvtHepRandomEngine::flatArray(const int s, double* vect) 
 {
   for (int i=0;i<s;i++)
     vect[i] = flat();
diff -Naur evtgenlhc.ORIG/9.1/src/EvtItgFourCoeffFcn.cpp evtgenlhc/9.1/src/EvtItgFourCoeffFcn.cpp
--- evtgenlhc.ORIG/9.1/src/EvtItgFourCoeffFcn.cpp	2004-07-12 18:13:30.000000000 +0200
+++ evtgenlhc/9.1/src/EvtItgFourCoeffFcn.cpp	2009-01-26 11:29:42.344206652 +0100
@@ -25,7 +25,7 @@
 extern "C" {
 }
 
-EvtItgFourCoeffFcn::EvtItgFourCoeffFcn( double (*theFunction)(double, const HepVector &, const HepVector &, const HepVector &, const HepVector &), double lowerRange, double upperRange, const HepVector &coeffs1, const HepVector &coeffs2, const HepVector &coeffs3, const HepVector &coeffs4):
+EvtItgFourCoeffFcn::EvtItgFourCoeffFcn( double (*theFunction)(double, const CLHEP::HepVector &, const CLHEP::HepVector &, const CLHEP::HepVector &, const CLHEP::HepVector &), double lowerRange, double upperRange, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3, const CLHEP::HepVector &coeffs4):
   EvtItgAbsFunction(lowerRange, upperRange),
   _myFunction(theFunction),
   _coeffs1(coeffs1),
diff -Naur evtgenlhc.ORIG/9.1/src/EvtItgPtrFunction.cpp evtgenlhc/9.1/src/EvtItgPtrFunction.cpp
--- evtgenlhc.ORIG/9.1/src/EvtItgPtrFunction.cpp	2004-07-12 18:13:30.000000000 +0200
+++ evtgenlhc/9.1/src/EvtItgPtrFunction.cpp	2009-01-26 11:30:13.626741151 +0100
@@ -31,7 +31,7 @@
 //----------------
 // Constructors --
 //----------------
-EvtItgPtrFunction::EvtItgPtrFunction( double (*theFunction)(double, const HepVector &), double lowerRange, double upperRange, const HepVector &coeffs1):
+EvtItgPtrFunction::EvtItgPtrFunction( double (*theFunction)(double, const CLHEP::HepVector &), double lowerRange, double upperRange, const CLHEP::HepVector &coeffs1):
   EvtItgAbsFunction(lowerRange, upperRange),
   _myFunction(theFunction),
   _coeffs1(coeffs1)
diff -Naur evtgenlhc.ORIG/9.1/src/EvtItgThreeCoeffFcn.cpp evtgenlhc/9.1/src/EvtItgThreeCoeffFcn.cpp
--- evtgenlhc.ORIG/9.1/src/EvtItgThreeCoeffFcn.cpp	2004-07-12 18:13:30.000000000 +0200
+++ evtgenlhc/9.1/src/EvtItgThreeCoeffFcn.cpp	2009-01-26 11:30:53.893993184 +0100
@@ -28,7 +28,7 @@
 extern "C" {
 }
 
-EvtItgThreeCoeffFcn::EvtItgThreeCoeffFcn( double (*theFunction)(double, const HepVector &, const HepVector &, const HepVector &), double lowerRange, double upperRange, const HepVector &coeffs1, const HepVector &coeffs2, const HepVector &coeffs3):
+EvtItgThreeCoeffFcn::EvtItgThreeCoeffFcn( double (*theFunction)(double, const CLHEP::HepVector &, const CLHEP::HepVector &, const CLHEP::HepVector &), double lowerRange, double upperRange, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2, const CLHEP::HepVector &coeffs3):
   EvtItgAbsFunction(lowerRange, upperRange),
   _myFunction(theFunction),
   _coeffs1(coeffs1),
diff -Naur evtgenlhc.ORIG/9.1/src/EvtItgTwoCoeffFcn.cpp evtgenlhc/9.1/src/EvtItgTwoCoeffFcn.cpp
--- evtgenlhc.ORIG/9.1/src/EvtItgTwoCoeffFcn.cpp	2004-07-12 18:13:30.000000000 +0200
+++ evtgenlhc/9.1/src/EvtItgTwoCoeffFcn.cpp	2009-01-26 11:31:30.494768658 +0100
@@ -27,7 +27,7 @@
 extern "C" {
 }
 
-EvtItgTwoCoeffFcn::EvtItgTwoCoeffFcn( double (*theFunction)(double, const HepVector &, const HepVector &), double lowerRange, double upperRange, const HepVector &coeffs1, const HepVector &coeffs2):
+EvtItgTwoCoeffFcn::EvtItgTwoCoeffFcn( double (*theFunction)(double, const CLHEP::HepVector &, const CLHEP::HepVector &), double lowerRange, double upperRange, const CLHEP::HepVector &coeffs1, const CLHEP::HepVector &coeffs2):
   EvtItgAbsFunction(lowerRange, upperRange),
   _myFunction(theFunction),
   _coeffs1(coeffs1),
diff -Naur evtgenlhc.ORIG/9.1/src/EvtVub.cpp evtgenlhc/9.1/src/EvtVub.cpp
--- evtgenlhc.ORIG/9.1/src/EvtVub.cpp	2006-02-07 18:26:13.000000000 +0100
+++ evtgenlhc/9.1/src/EvtVub.cpp	2009-01-26 11:33:17.670470337 +0100
@@ -133,7 +133,7 @@
   const int aSize = 10000;
 
   EvtPFermi pFermi(_a,mB,_mb);
-  HepDouble pf[aSize];
+  double pf[aSize];
 
   for(i=0;i<aSize;i++){
     double kplus = xlow + (double)(i+0.5)/((double)aSize)*(xhigh-xlow);
@@ -142,7 +142,7 @@
 
   static EvtHepRandomEngine myEngine;
 
-  _pFermi = new RandGeneral(myEngine,pf,aSize,0);
+  _pFermi = new CLHEP::RandGeneral(myEngine,pf,aSize,0);
   _dGamma = new EvtVubdGamma(_alphas);
   
   // check that there are 3 daughters
diff -Naur evtgenlhc.ORIG/9.1/src/EvtVubdGamma.cpp evtgenlhc/9.1/src/EvtVubdGamma.cpp
--- evtgenlhc.ORIG/9.1/src/EvtVubdGamma.cpp	2007-01-24 12:21:19.000000000 +0100
+++ evtgenlhc/9.1/src/EvtVubdGamma.cpp	2009-01-26 11:34:01.286244725 +0100
@@ -34,7 +34,6 @@
 //-----------------------
 // This Class's Header --
 //-----------------------
-#include "CLHEP/config/CLHEP.h"
 #include "EvtGenModels/EvtVubdGamma.hh"
 #include "EvtGenBase/EvtDiLog.hh"
 
