diff -arupN geant4.9.4.p03.orig/source/processes/hadronic/models/chiral_inv_phase_space/processes/src/G4QCaptureAtRest.cc geant4.9.4.p03/source/processes/hadronic/models/chiral_inv_phase_space/processes/src/G4QCaptureAtRest.cc
--- geant4.9.4.p03.orig/source/processes/hadronic/models/chiral_inv_phase_space/processes/src/G4QCaptureAtRest.cc	2011-12-13 16:53:59.000000000 +0100
+++ geant4.9.4.p03/source/processes/hadronic/models/chiral_inv_phase_space/processes/src/G4QCaptureAtRest.cc	2012-02-22 15:51:55.000000000 +0100
@@ -189,6 +189,18 @@ G4VParticleChange* G4QCaptureAtRest::AtR
 #ifdef debug
   G4cout<<"G4QCaptureAtRest::AtRestDoIt: "<<nE<<" elements in the material."<<G4endl;
 #endif
+
+  //VI===== protection against super high energy - start of a loop
+  G4double primEnergy = 0.0; 
+  G4double secEnergy = 0.0;
+  G4bool productOK = true;
+  const G4double limEnergy = 2*GeV;
+  do {
+  secEnergy = 0.0;
+
+  //VI===== 
+
+
   G4int projPDG=0;                           // PDG Code prototype for the captured hadron
   if      (particle ==     G4MuonMinus::MuonMinus()    ) projPDG=   13;
   else if (particle ==      G4TauMinus::TauMinus()     ) projPDG=   15; // @@AtomicRad?
@@ -697,6 +709,13 @@ G4VParticleChange* G4QCaptureAtRest::AtR
     G4QPDGCode targQPDG(targPDG);
     G4double tM=mp+targQPDG.GetMass();
     EnMomConservation=G4LorentzVector(0.,0.,0.,tM);         // Total 4-mom of the reaction
+
+    //VI===== save primary energy
+    primEnergy = tM;
+    if(tM > 200*GeV) {
+      G4cout<<"====>G4QCapAtRest M= "<<tM/GeV<<" GeV is too big!" <<G4endl;
+    }
+    //VI=====
 #ifdef tdebug
     G4cout<<"====>G4QCapAR:E/MCons, p="<<mp<<","<<projPDG<<",t="<<tM<<","<<targPDG<<",t4M="
           <<EnMomConservation<<G4endl;
@@ -805,6 +824,16 @@ G4VParticleChange* G4QCaptureAtRest::AtR
     theSec->SetDefinition(theDefinition);
     G4LorentzVector h4M=hadr->Get4Momentum();
     EnMomConservation-=h4M;
+
+    //VI===== check on final energy
+    secEnergy += h4M.e();
+    if(h4M.e() > 200*GeV) {
+      G4cout<<"G4QCaptureAtRest: wrong product"<<i<<" imax= "<<tNH
+	    <<" " << theDefinition->GetParticleName() << "  4-mom= " 
+	    << h4M <<G4endl;
+    }
+    //VI===== 
+
 #ifdef tdebug
     G4cout<<"G4QCapAR::ARDoIt:"<<i<<","<<PDGCode<<h4M<<h4M.m()<<EnMomConservation<<G4endl;
 #endif
@@ -828,6 +857,21 @@ G4VParticleChange* G4QCaptureAtRest::AtR
 #endif
   }
   delete output;
+  //VI=====
+  productOK = true;
+  if(EnergyDeposition > limEnergy || std::fabs(secEnergy - primEnergy) > limEnergy) {
+    productOK = false;
+    G4cout<<"G4QCaptureAtRest::AtRestDoIt: Big energy non-concervation we need redo sampling"<<G4endl;
+    G4cout << " Z= " << Z << "  N= " << N << G4endl;
+    G4cout<<"G4QCaptureAtRest::AtRestDoIt: the EnergyDeposition(GeV)="<<EnergyDeposition/GeV<<G4endl;
+    G4cout<<"  primEnergy(GeV)= " <<primEnergy/GeV << " secEnergy="<< secEnergy/GeV <<G4endl;
+    for(i=0; i<tNH; i++)
+      {
+	delete aParticleChange.GetSecondary(i);
+      }
+    aParticleChange.Clear();
+  }
+  } while(!productOK);
 #ifdef debug
   G4cout<<"G4QCaptureAtRest::AtRestDoIt: the EnergyDeposition="<<EnergyDeposition<<G4endl;
 #endif
