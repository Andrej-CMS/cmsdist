--- rpm.c	2006-02-17 22:08:28.000000000 +0100
+++ rpm.c.new	2007-06-24 18:08:39.000000000 +0200
@@ -2,6 +2,7 @@
 
 #include <rpmcli.h>
 #include <rpmbuild.h>
+#include <stdlib.h>
 
 #include "fs.h"		/* XXX for rpmFreeFilesystems() */
 
@@ -686,9 +687,17 @@
     /* Make a first pass through the arguments, looking for --rcfile */
     /* We need to handle that before dealing with the rest of the arguments. */
     optCon = poptGetContext("rpm", argc, argv, optionsTable, 0);
-    poptReadConfigFile(optCon, LIBRPMALIAS_FILENAME);
+    if (getenv ("LIBRPMALIAS_FILENAME")) {
+        poptReadConfigFile(optCon, getenv ("LIBRPMALIAS_FILENAME"));
+    } else {
+        poptReadConfigFile(optCon, LIBRPMALIAS_FILENAME);
+    }
     poptReadDefaultConfig(optCon, 1);
-    poptSetExecPath(optCon, RPMCONFIGDIR, 1);
+    if (getenv ("RPMCONFIGDIR")) {
+        poptSetExecPath(optCon, getenv ("RPMCONFIGDIR"), 1);
+    } else {
+        poptSetExecPath(optCon, RPMCONFIGDIR, 1);
+    }
 
     /* reading rcfile early makes it easy to override */
     /* XXX only --rcfile (and --showrc) need this pre-parse */
--- ./rpmqv.c	2006-03-27 22:30:28.000000000 +0200
+++ ./rpmqv.c.new	2007-06-24 18:10:02.000000000 +0200
@@ -13,6 +13,7 @@
 
 #include <rpmcli.h>
 #include <rpmbuild.h>
+#include <stdlib.h>
 
 #include "rpmdb.h"
 #include "rpmps.h"
@@ -296,9 +297,18 @@
     /*@-nullpass -temptrans@*/
     optCon = poptGetContext(__progname, argc, argv, optionsTable, 0);
     /*@=nullpass =temptrans@*/
-    (void) poptReadConfigFile(optCon, LIBRPMALIAS_FILENAME);
+    if (getenv ("LIBRPMALIAS_FILENAME")) {
+        (void) poptReadConfigFile(optCon, getenv ("LIBRPMALIAS_FILENAME"));
+    } else {
+        (void) poptReadConfigFile(optCon, LIBRPMALIAS_FILENAME);
+    }
+    
     (void) poptReadDefaultConfig(optCon, 1);
-    poptSetExecPath(optCon, RPMCONFIGDIR, 1);
+    if (getenv ("RPMCONFIGDIR")) {
+        poptSetExecPath(optCon, getenv ("RPMCONFIGDIR"), 1);
+    } else {
+        poptSetExecPath(optCon, RPMCONFIGDIR, 1);
+    }
 
     while ((arg = poptGetNextOpt(optCon)) > 0) {
 	optArg = poptGetOptArg(optCon);
--- lib/rpmrc.c	2007-06-24 17:49:03.000000000 +0200
+++ lib/rpmrc.c.new	2007-06-24 17:55:11.000000000 +0200
@@ -1783,6 +1783,10 @@
     if (rcfiles == NULL)
 	rcfiles = defrcfiles;
 
+    if (getenv ("LIBRPMRC_FILENAME")) {
+            rcfiles = getenv ("LIBRPMRC_FILENAME");
+    }
+    
     /* Read each file in rcfiles. */
     rc = 0;
     for (r = myrcfiles = xstrdup(rcfiles); r && *r != '\0'; r = re) {
--- lib/poptALL.c	2005-12-11 16:45:08.000000000 +0100
+++ lib/poptALL.c.new	2007-06-24 18:09:02.000000000 +0200
@@ -8,6 +8,7 @@
 
 #include <rpmcli.h>
 #include <fts.h>
+#include <stdlib.h>
 
 #include "debug.h"
 
@@ -436,9 +437,17 @@
 /*@-nullpass -temptrans@*/
     optCon = poptGetContext(__progname, argc, (const char **)argv, optionsTable, 0);
 /*@=nullpass =temptrans@*/
-    (void) poptReadConfigFile(optCon, LIBRPMALIAS_FILENAME);
+    if (getenv ("LIBRPMALIAS_FILENAME")) {
+        (void) poptReadConfigFile(optCon, getenv ("LIBRPMALIAS_FILENAME"));
+    } else {
+        (void) poptReadConfigFile(optCon, LIBRPMALIAS_FILENAME);
+    }
     (void) poptReadDefaultConfig(optCon, 1);
-    poptSetExecPath(optCon, RPMCONFIGDIR, 1);
+    if (getenv ("RPMCONFIGDIR")) {
+        poptSetExecPath(optCon, getenv ("RPMCONFIGDIR"), 1);
+    } else {
+        poptSetExecPath(optCon, RPMCONFIGDIR, 1);
+    }
 
     /* Process all options, whine if unknown. */
     while ((rc = poptGetNextOpt(optCon)) > 0) {
--- rpmio/macro.c	2005-11-12 02:18:23.000000000 +0100
+++ rpmio/macro.c.new	2007-06-24 18:28:19.000000000 +0200
@@ -2361,7 +2361,11 @@
 	exit(1);
     }
 
-    rpmInitMacros(NULL, macrofiles);
+    if (getenv ("RPM_MACROFILES")) {
+        rpmInitMacros(NULL, getenv ("RPM_MACROFILES"));
+    } else {
+        rpmInitMacros(NULL, macrofiles);
+    }
     for ( ; optind < argc; optind++) {
 	const char *val;
 
@@ -2387,7 +2391,11 @@
     FILE *fp;
     int x;
 
-    rpmInitMacros(NULL, macrofiles);
+    if (getenv ("RPM_MACROFILES")) {
+        rpmInitMacros(NULL, getenv("RPM_MACROFILES"));
+    } else {
+        rpmInitMacros(NULL, macrofiles);
+    }
     rpmDumpMacroTable(NULL, NULL);
 
     if ((fp = fopen(testfile, "r")) != NULL) {
--- rpmdb/rpmdb.h	2006-03-18 02:58:37.000000000 +0100
+++ rpmdb/rpmdb.h.new	2007-06-25 10:39:13.000000000 +0200
@@ -579,9 +579,7 @@
     void * sw = dbiStatsAccumulator(dbi, 16);	/* RPMTS_OP_DBDEL */
     int rc;
     assert(key->data != NULL && key->size > 0);
-    (void) rpmswEnter(sw, 0);
     rc = (dbi->dbi_vec->cdel) (dbi, dbcursor, key, data, flags);
-    (void) rpmswExit(sw, data->size);
     return rc;
 }
 
@@ -603,9 +601,7 @@
     void * sw = dbiStatsAccumulator(dbi, 14);	/* RPMTS_OP_DBGET */
     int rc;
     assert((flags == DB_NEXT) || (key->data != NULL && key->size > 0));
-    (void) rpmswEnter(sw, 0);
     rc = (dbi->dbi_vec->cget) (dbi, dbcursor, key, data, flags);
-    (void) rpmswExit(sw, data->size);
     return rc;
 }
 
@@ -628,9 +624,7 @@
     void * sw = dbiStatsAccumulator(dbi, 14);	/* RPMTS_OP_DBGET */
     int rc;
     assert((flags == DB_NEXT) || (key->data != NULL && key->size > 0));
-    (void) rpmswEnter(sw, 0);
     rc = (dbi->dbi_vec->cpget) (dbi, dbcursor, key, pkey, data, flags);
-    (void) rpmswExit(sw, data->size);
     return rc;
 }
 
@@ -652,9 +646,7 @@
     void * sw = dbiStatsAccumulator(dbi, 15);	/* RPMTS_OP_DBPUT */
     int rc;
     assert(key->data != NULL && key->size > 0 && data->data != NULL && data->size > 0);
-    (void) rpmswEnter(sw, 0);
     rc = (dbi->dbi_vec->cput) (dbi, dbcursor, key, data, flags);
-    (void) rpmswExit(sw, data->size);
     return rc;
 }
 
