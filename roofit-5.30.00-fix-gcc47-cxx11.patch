--- v5-32-00.orig/roofit/roofitcore/src/RooAbsPdf.cxx	2012-04-27 10:31:16.000000000 +0200
+++ v5-32-00/roofit/roofitcore/src/RooAbsPdf.cxx	2012-04-27 10:36:41.000000000 +0200
@@ -331,7 +331,7 @@ Bool_t RooAbsPdf::traceEvalPdf(Double_t 
 
   // check for a math error or negative value
   Bool_t error(kFALSE) ;
-  if (isnan(value)) {
+  if (TMath::IsNaN(value)) {
     logEvalError(Form("p.d.f value is Not-a-Number (%f), forcing value to zero",value)) ;
     error=kTRUE ;
   }
@@ -542,7 +542,7 @@ Bool_t RooAbsPdf::traceEvalHook(Double_t
   // Floating point error checking and tracing for given float value
 
   // check for a math error or negative value
-  Bool_t error= isnan(value) || (value < 0);
+  Bool_t error= TMath::IsNaN(value) || (value < 0);
 
   // do nothing if we are no longer tracing evaluations and there was no error
   if(!error && _traceCount <= 0) return error ;
--- v5-32-00.orig/roofit/roofitcore/src/RooNumIntFactory.cxx	2012-04-27 10:31:16.000000000 +0200
+++ v5-32-00/roofit/roofitcore/src/RooNumIntFactory.cxx	2012-04-27 10:36:41.000000000 +0200
@@ -151,7 +151,7 @@ Bool_t RooNumIntFactory::storeProtoInteg
   }
 
   // Add to factory 
-  _map[name.Data()] = make_pair<RooAbsIntegrator*,std::string>(proto,depName) ;
+  _map[name.Data()] = std::pair<RooAbsIntegrator*,std::string>(proto,depName) ;
 
   // Add default config to master config
   RooNumIntConfig::defaultConfig().addConfigSection(proto,defConfig) ;
--- v5-32-00.orig/roofit/roofitcore/src/RooResolutionModel.cxx	2012-04-27 10:31:16.000000000 +0200
+++ v5-32-00/roofit/roofitcore/src/RooResolutionModel.cxx	2012-04-27 10:36:41.000000000 +0200
@@ -325,7 +325,7 @@ Bool_t RooResolutionModel::traceEvalHook
   // Floating point error checking and tracing for given float value
 
   // check for a math error or negative value
-  return isnan(value) ;
+   return TMath::IsNaN(value) ;
 }
 
 
--- v5-32-00.orig/roofit/roostats/src/HypoTestInverterOriginal.cxx	2012-04-27 10:31:19.000000000 +0200
+++ v5-32-00/roofit/roostats/src/HypoTestInverterOriginal.cxx	2012-04-27 10:36:41.000000000 +0200
@@ -195,7 +195,7 @@ bool HypoTestInverterOriginal::RunAutoSc
 	x = (log(target) - log(b)) / a;
 
 	// to do: do not allow next iteration outside the xMin,xMax interval
-	if (x<xMin || x>xMax || isnan(x)) {
+	if (x<xMin || x>xMax || TMath::IsNaN(x)) {
 	  std::cout << "Extrapolated value out of range or nan: exits\n";
 	  quitThisLoop = true;
 	}
@@ -206,7 +206,7 @@ bool HypoTestInverterOriginal::RunAutoSc
 	double b = leftCL-a*leftX;
 	x = (target-b)/a;
 
-	if (x<xMin || x>xMax || isnan(x)) {
+	if (x<xMin || x>xMax || TMath::IsNaN(x)) {
 	  std::cout << "Extrapolated value out of range or nan: exits\n";
 	  quitThisLoop = true;
 	}
--- v5-32-00.orig/roofit/roostats/src/HypoTestResult.cxx	2012-04-27 10:31:19.000000000 +0200
+++ v5-32-00/roofit/roostats/src/HypoTestResult.cxx	2012-04-27 10:36:41.000000000 +0200
@@ -45,7 +45,7 @@ END_HTML
 
 #include <limits>
 #define NaN numeric_limits<float>::quiet_NaN()
-#define IsNaN(a) isnan(a)
+#define IsNaN(a) TMath::IsNaN(a)
 
 ClassImp(RooStats::HypoTestResult) ;
 
