--- branches/v5-30-00-patches/io/io/inc/TVirtualArray.h	2011/10/20 22:40:16	41522
+++ branches/v5-30-00-patches/io/io/inc/TVirtualArray.h	2011/10/20 22:53:47	41523
@@ -27,15 +27,28 @@
 class TVirtualArray {
 public:
    TClassRef  fClass;
-   UInt_t     fSize; 
+   UInt_t     fCapacity;
+   UInt_t     fSize;
    char      *fArray; //[fSize] 
 
-   TVirtualArray( TClass *cl, UInt_t size ) : fClass(cl), fSize(size), fArray( (char*)( cl ? cl->NewArray(size) : 0) ) {};
+   TVirtualArray( TClass *cl, UInt_t size ) : fClass(cl), fCapacity(size), fSize(size), fArray( (char*)( cl ? cl->NewArray(size) : 0) ) {};
    ~TVirtualArray() { if (fClass) fClass->DeleteArray( fArray ); }
 
    TClass *GetClass() { return fClass; }
    char *operator[](UInt_t ind) const { return GetObjectAt(ind); }
    char *GetObjectAt(UInt_t ind) const { return fArray+fClass->Size()*ind; }
+   
+   void SetSize(UInt_t size) {
+      // Set the used size of this array to 'size'.   If size is greater than the existing
+      // capacity, reallocate the array BUT no data is preserved.
+      fSize = size; 
+      if (fSize > fCapacity && fClass) { 
+         fClass->DeleteArray( fArray ); 
+         fArray = (char*)fClass->NewArray(fSize);
+         fCapacity = fSize;
+      }
+   }
+         
 
 };
 
--- branches/v5-30-00-patches/tree/tree/src/TBranchElement.cxx	2011/10/20 22:40:16	41522
+++ branches/v5-30-00-patches/tree/tree/src/TBranchElement.cxx	2011/10/20 22:53:47	41523
@@ -64,8 +64,11 @@
       TBufferFile &fBuffer;
       TVirtualArray *fOnfileObject;
 
-      R__PushCache(TBufferFile &b, TVirtualArray *in) : fBuffer(b), fOnfileObject(in) {
-         if (fOnfileObject) fBuffer.PushDataCache( fOnfileObject );
+      R__PushCache(TBufferFile &b, TVirtualArray *in, UInt_t size) : fBuffer(b), fOnfileObject(in) {
+         if (fOnfileObject) {
+            fOnfileObject->SetSize(size);
+            fBuffer.PushDataCache( fOnfileObject );
+         }
       }
       ~R__PushCache() {
          if (fOnfileObject) fBuffer.PopDataCache();
@@ -3243,8 +3246,6 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
-
    // STL container master branch (has only the number of elements).
    Int_t n;
    b >> n;
@@ -3258,9 +3259,9 @@
       }
    }
    fNdata = n;
-   if (!fObject) {
-      return;
-   }
+
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,n);   
+
    // Note: Proxy-helper needs to "embrace" the entire
    //       streaming of this STL container if the container
    //       is a set/multiset/map/multimap (what we do not
@@ -3336,13 +3337,14 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
-
    // STL container sub-branch (contains the elements).
    fNdata = fBranchCount->GetNdata();
-   if (!fNdata || !fObject) {
+   if (!fNdata) {
       return;
    }
+
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,fNdata);
+
    TStreamerInfo *info = GetInfoImp();
    if (info == 0) return;
 
@@ -3377,13 +3379,13 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
-
    // STL container sub-branch (contains the elements).
    fNdata = fBranchCount->GetNdata();
-   if (!fNdata || !fObject) {
+   if (!fNdata) {
       return;
    }
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,fNdata);
+   
    TStreamerInfo *info = GetInfoImp();
    if (info == 0) return;
 
@@ -3409,13 +3411,13 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
-
    // STL container sub-branch (contains the elements).
    fNdata = fBranchCount->GetNdata();
-   if (!fNdata || !fObject) {
+   if (!fNdata) {
       return;
    }
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,fNdata);
+   
    TStreamerInfo *info = GetInfoImp();
    if (info == 0) return;
    // Since info is not null, fReadActionSequence is not null either.
@@ -3442,8 +3444,6 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
-
    // TClonesArray master branch (has only the number of elements).
    Int_t n;
    b >> n;
@@ -3483,8 +3483,6 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
-
    // TClonesArray sub-branch (contains the elements).
    fNdata = fBranchCount->GetNdata();
    TClonesArray* clones = (TClonesArray*) fObject;
@@ -3498,6 +3496,10 @@
    if (info==0) return;
    // Since info is not null, fReadActionSequence is not null either.
 
+   // Note, we could (possibly) save some more, by configuring the action
+   // based on the value of fOnfileObject rather than pushing in on a stack.
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,fNdata);
+
    char **arr = (char **)clones->GetObjectRef(0);
    char **end = arr + fNdata;
    b.ReadSequenceVecPtr(*fReadActionSequence,arr,end);
@@ -3521,7 +3523,7 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,1);
    // If not a TClonesArray or STL container master branch
    // or sub-branch and branch inherits from tobject,
    // then register with the buffer so that pointers are
@@ -3558,7 +3560,6 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
    // If not a TClonesArray or STL container master branch
    // or sub-branch and branch inherits from tobject,
    // then register with the buffer so that pointers are
@@ -3574,6 +3575,7 @@
    if (!info) {
       return;
    }
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,1); // Here we have a single object that contains a variable size C-style array.
    // Since info is not null, fReadActionSequence is not null either.
    b.ReadSequence(*fReadActionSequence, fObject);
 }
@@ -3593,8 +3595,6 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
-
    // If not a TClonesArray or STL container master branch
    // or sub-branch and branch inherits from tobject,
    // then register with the buffer so that pointers are
@@ -3609,6 +3609,9 @@
    if (!info) {
       return;
    }
+
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,1);
+   
    // Since info is not null, fReadActionSequence is not null either.
    b.ReadSequence(*fReadActionSequence, fObject);
    fNdata = (Int_t) GetValue(0, 0);
@@ -3628,7 +3631,7 @@
       return;
    }
 
-   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject);
+   R__PushCache onfileObject(((TBufferFile&)b),fOnfileObject,1);
    fBranchClass->Streamer(fObject,b);
 }
 
