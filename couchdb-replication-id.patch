--- src/couchdb/couch_rep.erl	2011-08-08 17:37:14.000000000 +0200
+++ src/couchdb/couch_rep.erl	2011-08-08 17:48:30.000000000 +0200
@@ -523,34 +523,7 @@
     _ ->
         throw({error, <<"Invalid filter. Must match `ddocname/filtername`.">>})
     end,
-    ProxyParams = parse_proxy_params(
-        couch_util:get_value(<<"proxy">>, Props, [])),
-    DbName = couch_util:get_value(<<"source">>, Props),
-    Source = try
-        open_db(DbName, UserCtx, ProxyParams)
-    catch
-    _Tag:DbError ->
-        DbErrorMsg = io_lib:format("Could not open source database `~s`: ~s",
-           [couch_util:url_strip_password(DbName), couch_util:to_binary(DbError)]),
-        throw({error, iolist_to_binary(DbErrorMsg)})
-    end,
-    try
-        Body = case (catch open_doc(Source, <<"_design/", DDocName/binary>>)) of
-        {ok, #doc{body = Body0}} ->
-            Body0;
-        DocError ->
-            DocErrorMsg = io_lib:format(
-                "Couldn't open document `_design/~s` from source "
-                "database `~s`: ~s",
-                [dbname(Source), DDocName, couch_util:to_binary(DocError)]),
-            throw({error, iolist_to_binary(DocErrorMsg)})
-        end,
-        Code = couch_util:get_nested_json_value(
-            Body, [<<"filters">>, FilterName]),
-        re:replace(Code, "^\s*(.*?)\s*$", "\\1", [{return, binary}])
-    after
-        close_db(Source)
-    end.
+    Filter.
 
 maybe_add_trailing_slash(Url) ->
     re:replace(Url, "[^/]$", "&/", [{return, list}]).
