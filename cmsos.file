### FILE cmsos
if [ "$BUILD_ARCH" != "" ]; then
    echo "$BUILD_ARCH"
elif [ `uname` = Linux ]; then
  if [ -f /etc/SuSE-release ]; then
    echo suse`grep -i '^version' < /etc/SuSE-release | tr -dc '[0-9]'`
  elif grep -q Scientific /etc/redhat-release 2>/dev/null; then
    slc_version=$(grep Scientific /etc/redhat-release |
		  sed 's/.*[rR]elease \([0-9]*\)\..*/\1/')
    if grep -q Intel /proc/cpuinfo 2>/dev/null; then
      echo slc${slc_version}_ia32
    else
      echo slc${slc_version}_amd64
    fi
  else
    archos= archosv=
    for f in debian_version slackware-version fedora-release \
	     redhat-release altlinux-release gentoo-release \
	     cobalt-release mandrake-release conectiva-release; do
      if [ -f /etc/$f ]; then
	archos=`echo $f | sed 's/[-_].*//'`
	archosv=`tr -dc '[0-9]' < /etc/$f`
	break
      fi
    done
    [ X$archos = Xredhat ] && archos=rh
    if [ -z "$archos" -o -z "$archosv" ]; then
      echo linux`uname -r | cut -d. -f1,2 | tr -d .`
    else
      echo $archos$archosv
    fi
  fi
elif [ `uname` = Darwin ]; then
  if [ "$(uname -m)" == "i386" ]
  then
	cputype=ia32
  else
	cputype=ppc32
  fi
  echo osx`sw_vers -productVersion | cut -d. -f1,2 | tr -dc [0-9]`_$cputype
elif [ $(uname | cut -d_ -f1) = CYGWIN ]; then
  echo win32_ia32
else
  echo unsupported
fi

