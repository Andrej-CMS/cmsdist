diff --git a/Analysis/ProgressLog.cc b/Analysis/ProgressLog.cc
index 996656e..42d48c7 100644
--- a/Analysis/ProgressLog.cc
+++ b/Analysis/ProgressLog.cc
@@ -16,6 +16,7 @@
 #include "ThePEG/Persistency/PersistentIStream.h"
 
 #include <sys/times.h>
+#include <unistd.h>
 
 using namespace ThePEG;
 
diff --git a/Interface/ParVector.tcc b/Interface/ParVector.tcc
index f7bb9d7..9d51e3c 100644
--- a/Interface/ParVector.tcc
+++ b/Interface/ParVector.tcc
@@ -298,16 +298,16 @@ template <typename T, typename Type>
 void ParVector<T,Type>::doxygenDescription(ostream & os) const {
   ParVectorTBase<Type>::doxygenDescription(os);
   os << "<b>Default value:</b> ";
-  putUnit(os, theDef);
+  this->putUnit(os, theDef);
   if ( theDefFn ) os << " (May be changed by member function.)";
   if ( ParVectorBase::lowerLimit() ) {
     os << "<br>\n<b>Minimum value:</b> ";
-    putUnit(os, theMin);
+    this->putUnit(os, theMin);
     if ( theMinFn ) os << " (May be changed by member function.)";
   }
   if ( ParVectorBase::upperLimit() ) {
     os << "<br>\n<b>Maximum value:</b> ";
-    putUnit(os, theMax);
+    this->putUnit(os, theMax);
     if ( theMaxFn ) os << " (May be changed by member function.)";
   }
   os << "<br>\n";
diff --git a/LesHouches/LesHouchesFileReader.cc b/LesHouches/LesHouchesFileReader.cc
index 863b212..8bb7767 100644
--- a/LesHouches/LesHouchesFileReader.cc
+++ b/LesHouches/LesHouchesFileReader.cc
@@ -544,9 +544,9 @@ bool LesHouchesFileReader::doReadEvent() {
 	          >> hepeup.PUP[i][3] >> hepeup.PUP[i][4]
         	  >> hepeup.VTIMUP[i] >> hepeup.SPINUP[i] ) )
       return false;
-    if(isnan(hepeup.PUP[i][0])||isnan(hepeup.PUP[i][1])||
-       isnan(hepeup.PUP[i][2])||isnan(hepeup.PUP[i][3])||
-       isnan(hepeup.PUP[i][4])) 
+    if(std::isnan(hepeup.PUP[i][0])||std::isnan(hepeup.PUP[i][1])||
+       std::isnan(hepeup.PUP[i][2])||std::isnan(hepeup.PUP[i][3])||
+       std::isnan(hepeup.PUP[i][4])) 
       throw Exception() 
 	<< "nan's as momenta in Les Houches file "
 	<< Exception::eventerror;
diff --git a/MatrixElement/MEBase.cc b/MatrixElement/MEBase.cc
index 96b2b0a..d7d3857 100644
--- a/MatrixElement/MEBase.cc
+++ b/MatrixElement/MEBase.cc
@@ -69,7 +69,7 @@ void MEBase::setKinematics(tPPair in, const PVector & out) {
       omap.insert(make_pair(out[j]->dataPtr(), out[j]));
 
     for ( int j = 2, M = diag.partons().size(); j < M; ++j ) {
-      multimap<tcPDPtr,tPPtr>::iterator it = omap.find(diag.partons()[j]);
+      multimap<tcPDPtr,tPPtr>::const_iterator it = omap.find(diag.partons()[j]);
       if ( it == omap.end() ) break;
       parts.push_back(it->second);
       omap.erase(it);
diff --git a/Persistency/PersistentOStream.cc b/Persistency/PersistentOStream.cc
index 6142b95..0c6186f 100644
--- a/Persistency/PersistentOStream.cc
+++ b/Persistency/PersistentOStream.cc
@@ -151,7 +151,7 @@ writeClassDescription(const ClassDescriptionBase * db) {
 PersistentOStream & PersistentOStream::flush() {
   ObjectMap::iterator it = writtenObjects.begin();
   while ( it != writtenObjects.end() ) {
-    ObjectMap::iterator it2 = it++;
+    ObjectMap::const_iterator it2 = it++;
     if ( (*it2).second > lastSavedObject.top() ) writtenObjects.erase(it2);
   }
   os().flush();
diff --git a/Utilities/UnitIO.h b/Utilities/UnitIO.h
index 8efe8a1..146a323 100644
--- a/Utilities/UnitIO.h
+++ b/Utilities/UnitIO.h
@@ -17,12 +17,6 @@
 #include <cstdlib>
 #include <cmath>
 
-// Workarounds for OS X
-#if defined __APPLE__ && defined __MACH__
-extern "C" int isnan(double) throw();
-extern "C" int isinf(double) throw();
-#endif
-
 namespace ThePEG {
 
 using namespace std;
@@ -179,8 +173,8 @@ inline OUnitErr<double,double> ouniterr(double t, double dt) {
 /** Output an OUnitErr object to a stream. */
 template <typename OStream, typename T, typename UT>
 OStream & operator<<(OStream & os, const OUnitErr<T,UT> & u) {
-  if ( isnan(u.x) || isinf(u.x) ) return os << u.x;
-  if ( isnan(u.dx) || isinf(u.dx) ) return os << u.x << '(' << u.dx << ')';
+  if ( std::isnan(u.x) || std::isinf(u.x) ) return os << u.x;
+  if ( std::isnan(u.dx) || std::isinf(u.dx) ) return os << u.x << '(' << u.dx << ')';
   double dx = min(u.dx, abs(u.x));
   if ( dx <= 0.0 ) return os << u.x;
   ostringstream osse;
