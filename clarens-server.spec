### RPM external clarens-server 0.7.3
## INITENV +PATH PYTHONPATH %{i}/lib
## INITENV +PATH PATH %{i}/bin
## INITENV CMD ln -sf $CLARENS_SERVER_ROOT/etc/httpd/clarens-server-default.conf $APACHE_ROOT/conf.d

Summary: The Clarens web services layer server
Source0: http://julian.ultralight.org/clarens/devel/%n-%v.tar.gz
Source1: http://julian.ultralight.org/clarens/devel/demokey.pem
Source2: http://julian.ultralight.org/clarens/devel/democert.pem
Source3: http://julian.ultralight.org/clarens/devel/clarens-server-web-%v.tar.gz
Patch0: clarens-server-config
Vendor: Conrad Steenberg <conrad@hep.caltech.edu>
Url: http://clarens.sourceforge.net

Requires: zlib
Requires: openssl
Requires: libjio
Requires: tdb
Requires: python
Requires: python-tdb
Requires: clarens-avl
Requires: py-xmlrpc
Requires: m2crypto
Requires: apache
Requires: mod_python
Requires: py2-monalisa-apmon
Requires: py2-json
Requires: gridsite

%description
The Clarens Grid-Enabled Web Services Framework is a wide-area network
system for collaborative analysis of data generated by the Compact Muon
Solenoid (CMS) detector at the European Organization for Nuclear Research,
CERN.

Clarens provides a "portal" for a host of Grid computing services. This
portal will take the form of not only a standard web-based application, but
also programmatic interfaces to analysis services that physicists use to
access and analyze data as part of a dynamic Virtual Organization.

%prep
%setup -n %n-%v
%patch0 -p0

%build
%install

mkdir -p %i/etc/grid-security
cp $RPM_SOURCE_DIR/democert.pem %i/etc/grid-security/hostcert.pem
cp $RPM_SOURCE_DIR/demokey.pem %i/etc/grid-security/hostkey.pem
tar -zxvf $RPM_SOURCE_DIR/clarens-server-web-0.7.3.tar.gz


export clarens_configdir=%i/etc/apache-conf
export apache_configdir=$APACHE_ROOT/conf

python clarens_setup.py --build --install \
       --server_root=%i/services \
       --dir_alias="/clarens" \
       --apache_configdir=$CLARENS_SERVER_ROOT/etc/apache-conf \
       --key_dir=%i/etc/grid-security \
       --key_name=hostkey.pem \
       --cert_name=hostcert.pem \
       --prefix=/%i \
       --profile=default \
       --clarens_configdir=%i/etc \
       --shell="/bin/sh" \
       --debug=2

find %i
mv %i/share/doc/%n-%v %i/doc
rm -rf %/share

mv clarens-server-web-%v %i/services/.clarens_file_root

python %i/lib/clarens-server-config.py \
       --batch --adapt \
       --profile=default \
       --config-dir=%i/etc/ \
       --apache-config-dir=$CLARENS_SERVER_ROOT/etc/apache-conf

# We don't want the build-time configuration to 'leak' into the rpm
rm -rf $CLARENS_SERVER_ROOT/etc/apache-conf

find %i -name '*.bak' | xargs rm -f

#--------------------------------------------------------------------
mkdir -p %i/etc/profile.d
cat << DEPS_SETUP > %i/etc/profile.d/dependencies-setup.sh
#!/bin/sh

EXTERNAL_ROOT=\$CLARENS_RUNTIME_TOOL_ROOT"/../.."


# Set up some environment variables from the current installation
export l_nusr=\$(whoami)

#--------------------------------------------------------------------
# We cheated a little when we installed the default instance's config files
# Now we have to rename the default clarens profile to "default" to make 
# the configuration script 
cp \$CLARENS_SERVER_ROOT/lib/clarens-server-config.py \
\$CLARENS_SERVER_ROOT/lib/clarens-server-config.py.rpmsave

sed \
        -e "s;default_configdir=\"\$old_configdir/default\";default_configdir=\"\$old_configdir\";g" \
        -e "s;default_instance=\"\";default_instance=\"default\";g" \
        \$CLARENS_SERVER_ROOT/lib/clarens-server-config.py > \
        \$CLARENS_SERVER_ROOT/lib/clarens-server-config.py.rpmnew 

mv \$CLARENS_SERVER_ROOT/lib/clarens-server-config.py.rpmnew  \
\$CLARENS_SERVER_ROOT/lib/clarens-server-config.py

#--------------------------------------------------------------------
# Apply path name changes
for file in  \
        /lib/clarens-server-config.py \
        /bin/clarens-server-config \
        /etc/conf/default/config \
        /etc/conf/default/echo/config \
        /etc/conf/default/file/config \
        /etc/conf/default/group/config \
        /etc/conf/default/proxy/config \
        /etc/conf/default/shell/config \
        /etc/conf/default/system/config 
  do
        cp \$CLARENS_SERVER_ROOT\$file \$CLARENS_SERVER_ROOT\$file.rpmsave
        sed \
        -e "s;%i;\$CLARENS_SERVER_ROOT;g" \
        \$CLARENS_SERVER_ROOT\$file > \$CLARENS_SERVER_ROOT\$file.rpmnew
        mv \$CLARENS_SERVER_ROOT\$file.rpmnew \$CLARENS_SERVER_ROOT\$file
  done

chmod a+x \$CLARENS_SERVER_ROOT/bin/clarens-server-config

#--------------------------------------------------------------------
# Adapt ssl.conf

configfile=\$CLARENS_SERVER_ROOT/etc/conf/default/config

if [ -f \$configfile ]; then 
  cadir=\$(awk 'BEGIN {FS="\""} /^"clarens_ca_dir"/ {print \$4}' \$configfile)
  certdir=\$(awk 'BEGIN {FS="\""} /^"clarens_key_dir"/ {print \$4}' \$configfile)
  certfile=\$(awk 'BEGIN {FS="\""} /^"clarens_certificate"/ {print \$4}' \$configfile)
  keyfile=\$(awk 'BEGIN {FS="\""} /^"clarens_private_key"/ {print \$4}' \$configfile)

  certfile="\$certdir"/\$certfile
  keyfile="\$certdir"/\$keyfile
else
  cadir=/etc/grid-security/certificates
  certdir=\$CLARENS_SERVER_ROOT/etc/grid-security
  certfile="\$certdir"/hostcert.pem
  keyfile="\$certdir"/hostkey.pem
fi

echo \$cadir, \$certdir, \$certfile, \$keyfile

cp \$APACHE_ROOT/conf/ssl.conf \$APACHE_ROOT/conf/ssl.conf.rpmsave

sed \
  -e '/^\#\?SSLVerifyDepth[ \t]*[^ \n\f]*\$/,/\n/s;^\#SSLVerifyDepth;SSLVerifyDepth;g' \
  -e '/^\#\?SSLVerifyClient/,/\n/s;^\#SSLVerifyClient;SSLVerifyClient;g' \
  -e '/^\#\?SSLCACertificatePath/,/\n/s;^\#SSLCACertificatePath;SSLCACertificatePath;g' \
  -e 's/^\([ \t]*Load.*mod_auth.*\)\$/\#\1/g' \
  -e 's;SSLCertificateFile[ \t]*[^ \n\f]*\$;'"SSLCertificateFile \$certfile;" \
  -e 's;SSLCertificateKeyFile[ \t]*[^ \n\f]*\$;'"SSLCertificateKeyFile \$keyfile;" \
  -e 's;SSLCACertificatePath[ \t]*[^ \n\f]*\$;'"SSLCACertificatePath \$cadir;" \
  -e '/^\SSLVerifyClient/,/\$/s;^\SSLVerifyClient[ \t]*[^ \n\f]*\$;SSLVerifyClient require;g' \
\$APACHE_ROOT/conf/ssl.conf > \$APACHE_ROOT/conf/ssl.conf.rpmnew

mv \$APACHE_ROOT/conf/ssl.conf.rpmnew \$APACHE_ROOT/conf/ssl.conf

temp_line=\$( grep '<Directory \"'"\$CLARENS_SERVER_ROOT"'/services/\"[ \t]*>' \$APACHE_ROOT/conf/ssl.conf)

if [ -z "\$temp_line" ]
then
  echo "Inserting directory specification for \$CLARENS_SERVER_ROOT/services"
  sed \
  -e '/<\/VirtualHost>/i\\
 RewriteEngine  on \\
 Options FollowSymLinks \\
 RewriteOptions inherit \\
 \\
<Directory '"\"\$CLARENS_SERVER_ROOT/services/\""'> \\
  SSLOptions +StdEnvVars +ExportCertData \\
</Directory>'\\
  \$APACHE_ROOT/conf/ssl.conf >  \$APACHE_ROOT/conf/ssl.conf.rpmnew
mv \$APACHE_ROOT/conf/ssl.conf.rpmnew \$APACHE_ROOT/conf/ssl.conf
fi




#--------------------------------------------------------------------
# Comment out mod_auth
cp \$APACHE_ROOT/conf/httpd.conf \$APACHE_ROOT/conf/httpd.conf.rpmsave

sed \
  -e 's/^\([ \t]*Load.*mod_auth.*\)\$/\#\1/g' \
\$APACHE_ROOT/conf/httpd.conf >  \$APACHE_ROOT/conf/httpd.conf.rpmnew


mv \$APACHE_ROOT/conf/httpd.conf.rpmnew \$APACHE_ROOT/conf/httpd.conf

\$CLARENS_SERVER_ROOT/bin/clarens-server-config \
       --batch \
       --save \
       --user=\$l_nusr \
       --profile=default \
       --config-dir=\$CLARENS_SERVER_ROOT/etc \
       --apache-config-dir=$APACHE_ROOT/conf \
       --keep \
       --debug

#cat \$CLARENS_SERVER_ROOT/share/doc/clarens-server-%{version}/SETUP_WARNING

DEPS_SETUP
