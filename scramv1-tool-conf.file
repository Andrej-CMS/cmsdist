### FILE scramv1-tool-conf

Requires: gmake-toolfile
Source0: tool2xml.pl
%define closingbrace )
%define online %(case %cmsplatf in *onl_*_*%closingbrace echo true;; *%closingbrace echo false;; esac)

%prep
%build

# This is a generic template to collect SCRAMToolBox toolfiles of all the tools
# and generate CMSconfiguration, tools-STANDALONE.conf and requirements file
#
#   requiredtools	Tools for which we need to collect the SCRAMToolBox toolfiles
#                  	(This is automatically set by install.sh script)
#   skipreqtools	Do not add these tools in selected directory

%install
rm -rf %i
mkdir -p %i/tools/selected %i/tools/available

%if "%{?systemtools:set}" != "set"
%define systemtools %{nil}
%endif

%if "%{?skipreqtools:set}" != "set"
%define skipreqtools %{nil}
%endif

DoneTools=" "
SkipTools=
for tool in %requiredtools %systemtools ${PKGTOOLS_SYSTEM_TOOLS} ; do
  wot=`echo $tool | sed 's|-toolfile$||'`
  [ "X$tool" == "X$wot" ] && SkipTools="${SkipTools}${tool} " && continue
  uctool=`echo $tool | tr '[a-z-]' '[A-Z_]'`
  toolbase=`eval echo \\$${uctool}_ROOT`
  [ -d $toolbase/etc/scram.d ] || continue
  DoneTools="$DoneTools $wot "
  echo ">> Copying tool files from: $tool"
  find $toolbase/etc/scram.d -type f -exec cp {} %i/tools/selected \;
done
for tool in $SkipTools ; do
  [ "X`echo $DoneTools | tr ' ' '\n' | grep ^$tool$`" == "X" ] || continue
  uctool=`echo $tool | tr '[a-z-]' '[A-Z_]'`
  toolbase=`eval echo \\$${uctool}_ROOT`
  [ -d $toolbase/etc/scram.d ] || continue
  echo ">> Copying tool files from: $tool"
  find $toolbase/etc/scram.d -type f -exec cp {} %i/tools/selected \;
done

# Fixes logic in above loop in case of online release:
# the descriptions of explicitly defined systemtools should 
# take precedence over those from cms-rebuilt rpms
%if "%online" == "true"
for tool in %systemtools ${PKGTOOLS_SYSTEM_TOOLS} ; do
  rm -f %i/tools/selected/$tool %i/tools/selected/${tool}.xml
  cp -rf %{onlinesystemtoolsroot}/etc/scram.d/$tool.xml %i/tools/selected/
done
# For now copy all systemtools files. If needed, this can be done more selectively.
%endif

for tool in `find %i/tools/selected -type f | sed 's|\.xml$||' | sort | uniq`
do
    if [ ! -f $tool.xml ] ; then
      perl %_sourcedir/tool2xml.pl $tool > $tool.xml
      rm -f $tool
    fi
    toolname=`basename $tool`
    echo %skipreqtools | tr ' ' '\n' | grep "^$toolname\$" 2>&1 >/dev/null && mv $tool.xml %i/tools/available
done

%post
%{relocateCmsFiles} $(find $RPM_INSTALL_PREFIX/%{pkgrel}/tools -type f)
