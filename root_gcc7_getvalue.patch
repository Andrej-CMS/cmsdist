diff --git a/interpreter/llvm/src/lib/Transforms/IPO/PassManagerBuilder.cpp b/interpreter/llvm/src/lib/Transforms/IPO/PassManagerBuilder.cpp
index e283d26..4433bea 100644
--- a/interpreter/llvm/src/lib/Transforms/IPO/PassManagerBuilder.cpp
+++ b/interpreter/llvm/src/lib/Transforms/IPO/PassManagerBuilder.cpp
@@ -143,8 +143,8 @@ PassManagerBuilder::PassManagerBuilder() {
     VerifyOutput = false;
     MergeFunctions = false;
     PrepareForLTO = false;
-    PGOInstrGen = RunPGOInstrGen;
-    PGOInstrUse = RunPGOInstrUse;
+    PGOInstrGen = RunPGOInstrGen.getValue();
+    PGOInstrUse = RunPGOInstrUse.getValue();
     PrepareForThinLTO = false;
     PerformThinLTO = false;
 }
diff --git a/interpreter/llvm/src/lib/Transforms/Instrumentation/PGOInstrumentation.cpp b/interpreter/llvm/src/lib/Transforms/Instrumentation/PGOInstrumentation.cpp
index 27f32b3..0515d57 100644
--- a/interpreter/llvm/src/lib/Transforms/Instrumentation/PGOInstrumentation.cpp
+++ b/interpreter/llvm/src/lib/Transforms/Instrumentation/PGOInstrumentation.cpp
@@ -152,7 +152,7 @@ public:
   PGOInstrumentationUseLegacyPass(std::string Filename = "")
       : ModulePass(ID), ProfileFileName(std::move(Filename)) {
     if (!PGOTestProfileFile.empty())
-      ProfileFileName = PGOTestProfileFile;
+      ProfileFileName = PGOTestProfileFile.getValue();
     initializePGOInstrumentationUseLegacyPassPass(
         *PassRegistry::getPassRegistry());
   }
@@ -917,7 +917,7 @@ static bool annotateAllFunctions(
 PGOInstrumentationUse::PGOInstrumentationUse(std::string Filename)
     : ProfileFileName(std::move(Filename)) {
   if (!PGOTestProfileFile.empty())
-    ProfileFileName = PGOTestProfileFile;
+    ProfileFileName = PGOTestProfileFile.getValue();
 }
 
 PreservedAnalyses PGOInstrumentationUse::run(Module &M,
