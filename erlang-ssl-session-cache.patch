--- lib/ssl/src/ssl_manager.erl	2011-08-04 11:03:43.000000000 +0200
+++ lib/ssl/src/ssl_manager.erl	2011-08-04 11:16:01.000000000 +0200
@@ -270,14 +270,14 @@
 	    #state{session_cache = Cache,
 		   session_cache_cb = CacheCb} = State) ->
     CacheCb:update(Cache, {{Host, Port}, ID}, Session#session{is_resumable = false}),
-    timer:apply_after(?CLEAN_SESSION_DB, CacheCb, delete, [{{Host, Port}, ID}]),
+    timer:send_after(delay_time(), self(), {delayed_clean_session, {{Host, Port}, ID}}),
     {noreply, State};
 
 handle_cast({invalidate_session, Port, #session{session_id = ID} = Session},
 	    #state{session_cache = Cache,
 		   session_cache_cb = CacheCb} = State) ->
     CacheCb:update(Cache, {Port, ID}, Session#session{is_resumable = false}),
-    timer:apply_after(?CLEAN_SESSION_DB, CacheCb, delete, [{Port, ID}]),
+    timer:send_after(delay_time(), self(), {delayed_clean_session, {Port, ID}}),
     {noreply, State};
 
 handle_cast({recache_pem, File, LastWrite, Pid, From},
@@ -312,6 +312,12 @@
     start_session_validator(Cache, CacheCb, LifeTime),
     {noreply, State#state{session_validation_timer = Timer}};
 
+handle_info({delayed_clean_session, Key}, #state{session_cache = Cache,
+             session_cache_cb = CacheCb
+            } = State) ->
+    CacheCb:delete(Cache, Key),
+    {noreply, State};
+
 handle_info({'EXIT', _, _}, State) ->
     %% Session validator died!! Do we need to take any action?
     %% maybe error log
@@ -411,3 +417,11 @@
 	[] ->
 	    call({cache_pem, File, LastWrite})
     end.
+
+delay_time() ->
+    case application:get_env(ssl, session_delay_cleanup_time) of
+        {ok, Time} when is_integer(Time) ->
+            Time;
+        _ ->
+            ?CLEAN_SESSION_DB
+    end.
--- lib/ssl/src/ssl_session_cache.erl	2011-08-04 11:16:34.000000000 +0200
+++ lib/ssl/src/ssl_session_cache.erl	2011-08-04 11:17:18.000000000 +0200
@@ -36,7 +36,7 @@
 %% Description: Return table reference. Called by ssl_manager process. 
 %%--------------------------------------------------------------------
 init(_) ->
-    ets:new(cache_name(), [set, protected]).
+    ets:new(cache_name(), [named_table, set, protected]).
 
 %%--------------------------------------------------------------------
 -spec terminate(cache_ref()) -> any(). %%    
