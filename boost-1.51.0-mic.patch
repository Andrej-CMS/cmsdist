--- a/tools/build/v2/tools/gcc.py	2012-04-26 05:35:55.000000000 +0200
+++ b/tools/build/v2/tools/gcc.py	2013-06-10 16:45:22.000000000 +0200
@@ -368,7 +368,7 @@
     bound_list=['PCH_FILE'])
 
 def gcc_compile_asm(targets, sources, properties):
-    get_manager().engine().set_target_variable(targets, 'LANG', '-x assembler-with-cpp')
+    get_manager().engine().set_target_variable(targets, 'LANG', '-x assembler-with-cpp -mmic')
 
 engine.register_action(
     'gcc.compile.asm',
--- a/tools/build/v2/tools/gcc.jam	2012-04-26 05:35:55.000000000 +0200
+++ b/tools/build/v2/tools/gcc.jam	2013-06-10 16:50:01.000000000 +0200
@@ -626,7 +626,7 @@
 {
     setup-fpic $(targets) : $(sources) : $(properties) ;    
     setup-address-model $(targets) : $(sources) : $(properties) ;
-    LANG on $(<) = "-x assembler-with-cpp" ;
+    LANG on $(<) = "-x assembler-with-cpp -mmic" ;
 }
 
 actions compile.asm
--- a/boost/mpl/aux_/config/gcc.hpp
+++ b/boost/mpl/aux_/config/gcc.hpp
@@ -14,7 +14,7 @@
 // $Date: 2008-10-10 23:19:02 -0700 (Fri, 10 Oct 2008) $
 // $Revision: 49267 $
 
-#if defined(__GNUC__) && !defined(__EDG_VERSION__)
+#if defined(__GNUC__) && !defined(__EDG_VERSION__) || defined(__INTEL_COMPILER)
 #   define BOOST_MPL_CFG_GCC ((__GNUC__ << 8) | __GNUC_MINOR__)
 #else
 #   define BOOST_MPL_CFG_GCC 0
--- a/boost/functional/hash/detail/hash_float.hpp 2012-05-04 00:05:21.000000000 +0200
+++ b/boost/functional/hash/detail/hash_float.hpp     2013-06-10 15:34:09.000000000 +0200
@@ -62,7 +62,7 @@
         inline std::size_t float_hash_value(T v)
         {
             using namespace std;
-            switch (fpclassify(v)) {
+            switch (std::fpclassify(v)) {
             case FP_ZERO:
                 return 0;
             case FP_INFINITE:
