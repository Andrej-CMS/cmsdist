--- root/cint/cintex/src/CINTFunctional.cxx	2009-03-04 15:49:00.000000000 +0100
+++ root522patch/cint/cintex/src/CINTFunctional.cxx	2009-03-04 15:53:24.000000000 +0100
@@ -307,14 +307,14 @@
                obj = context->fNewdelfuncs->fNewArray(nary, 0);
             }
             else {
-               obj = new char[size * nary];
+               obj = ::operator new( nary * size);
                long p = (long)obj; 
                for( long i = 0; i < nary; ++i, p += size )
                   (*context->fStub)(0, (void*)p, context->fParam, 0);
             }
          }
          else {
-            obj = new char[size];
+            obj = ::operator new( size );
             (*context->fStub)(0, obj, context->fParam, 0);
          }
       }
@@ -323,12 +323,12 @@
          errtxt += e.what();
          errtxt += " (C++ exception)";
          G__genericerror(errtxt.c_str());
-         delete [] (char *)(obj);
+         ::operator delete (obj);
          obj = 0; 
       } 
       catch (...) {
          G__genericerror("Exception: Unknown C++ exception");
-         delete [] (char *)(obj);
+         ::operator delete (obj);
          obj = 0; 
       }
      
@@ -359,7 +359,7 @@
             size_t size = context->fClass.SizeOf();
             for(int i = G__getaryconstruct()-1; i>=0 ; i--)
                (*context->fStub)(0, (char*)obj + size*i, context->fParam, 0);
-            ::operator delete [] (obj);
+            ::operator delete (obj);
          }
       }
       else {
@@ -368,7 +368,7 @@
          (*context->fStub)(0, obj, context->fParam, 0);
          G__setgvp(g__Xtmp);
          if( !(long(obj) == G__getgvp() && G__PVOID != G__getgvp()) )  {
-            ::operator delete [] (obj); //G__operator_delete(obj);
+            ::operator delete (obj); //G__operator_delete(obj);
          }
       }
       G__setnull(result);
