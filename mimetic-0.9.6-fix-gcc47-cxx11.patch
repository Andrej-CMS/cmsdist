diff --git a/mimetic/tokenizer.h b/mimetic/tokenizer.h
index 247b181..b968778 100644
--- a/mimetic/tokenizer.h
+++ b/mimetic/tokenizer.h
@@ -156,7 +156,7 @@ struct ContTokenizer: public ItTokenizer<typename Container::const_iterator,type
     ContTokenizer(const Container* cont, const DelimCont& delims)
     : ItTokenizer<const_iterator,value_type>(cont->begin(), cont->end())
     {
-        setDelimList(delims);
+        this->setDelimList(delims);
     }
     void setSource(const Container* cont)
     {
diff --git a/test/cutee.cxx b/test/cutee.cxx
index 77abbc6..55d158d 100644
--- a/test/cutee.cxx
+++ b/test/cutee.cxx
@@ -352,11 +352,11 @@ struct GenMakefile
 
         _( "" );
         _( RUNTEST_NAME ".cxx: cutee" );
-        _( "\t$(CUTEE) -m -o "RUNTEST_NAME".cxx" );
+        _( "\t$(CUTEE) -m -o " RUNTEST_NAME ".cxx" );
         _( "" );
         _( RUNTEST_NAME": autocutee.mk " RUNTEST_NAME ".o $(object_files)");
-        _( "\t$(CXX) $(CXXFLAGS) $(LDFLAGS) -o "RUNTEST_NAME" "RUNTEST_NAME".o $(object_files)");
-        _( "\t./"RUNTEST_NAME );
+        _( "\t$(CXX) $(CXXFLAGS) $(LDFLAGS) -o " RUNTEST_NAME " " RUNTEST_NAME ".o $(object_files)");
+        _( "\t./" RUNTEST_NAME );
         _( "" );
         _( "# cutee autogen: end ");
     }
@@ -419,13 +419,13 @@ struct GenAutomakefile
 
         _( "" );
         _( RUNTEST_NAME "-clean:");
-        _( "\trm -f autocutee.mk cutee *.o *.cutee.cxx "RUNTEST_NAME" "RUNTEST_NAME".cxx");
+        _( "\trm -f autocutee.mk cutee *.o *.cutee.cxx " RUNTEST_NAME " " RUNTEST_NAME ".cxx");
         _( "\ttouch autocutee.mk");
 
         _( "" );
-        _( "EXTRA_PROGRAMS="RUNTEST_NAME );
-        _( RUNTEST_NAME "_SOURCES="RUNTEST_NAME".cxx $(test_files) $(t_runners)");
-        _( RUNTEST_NAME"_DEPENDENCIES=cutee autocutee.mk" );
+        _( "EXTRA_PROGRAMS=" RUNTEST_NAME );
+        _( RUNTEST_NAME "_SOURCES=" RUNTEST_NAME ".cxx $(test_files) $(t_runners)");
+        _( RUNTEST_NAME "_DEPENDENCIES=cutee autocutee.mk" );
         _( "# cutee autogen: end ");
     }
 private:
