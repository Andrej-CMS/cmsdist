Index: root/tree/tree/src/TTreeCache.cxx
===================================================================
--- root/tree/tree/src/TTreeCache.cxx	(revision 44678)
+++ root/tree/tree/src/TTreeCache.cxx	(revision 44679)
@@ -1040,6 +1040,22 @@
 }
 
 //_____________________________________________________________________________
+void TTreeCache::SetFile(TFile *file)
+{
+   // Overload to make sure that the object specific
+
+   // The infinite recursion is 'broken' by the fact that
+   // TFile::SetCacheRead remove the entry from fCacheReadMap _before_
+   // calling SetFile (and also by setting fFile to zero before the calling).
+   if (fFile) {
+      TFile *prevFile = fFile;
+      fFile = 0;
+      prevFile->SetCacheRead(0, fTree);
+   }
+   TFileCacheRead::SetFile(file);
+}
+
+//_____________________________________________________________________________
 void TTreeCache::SetLearnEntries(Int_t n)
 {
    // Static function to set the number of entries to be used in learning mode
Index: root/tree/tree/inc/TTreeCache.h
===================================================================
--- root/tree/tree/inc/TTreeCache.h	(revision 44678)
+++ root/tree/tree/inc/TTreeCache.h	(revision 44679)
@@ -82,6 +82,7 @@
    virtual Int_t       ReadBufferPrefetch(char *buf, Long64_t pos, Int_t len);
    virtual void        ResetCache();
    virtual void        SetEntryRange(Long64_t emin,   Long64_t emax);
+   virtual void        SetFile(TFile *file);
    static void         SetLearnEntries(Int_t n = 10);
    void                StartLearningPhase();
    virtual void        StopLearningPhase();
