diff -Naur xrootd-3.1.0/src/XrdClient/XrdClient.cc xrootd-mt/src/XrdClient/XrdClient.cc
--- xrootd-3.1.0/src/XrdClient/XrdClient.cc	2011-10-21 07:19:29.000000000 -0700
+++ xrootd-mt/src/XrdClient/XrdClient.cc	2012-02-16 14:28:16.005295103 -0800
@@ -1212,6 +1212,39 @@
 }
 
 //_____________________________________________________________________________
+bool XrdClient::SendMonitoringInfo(const char *text, kXR_unt32 *dictid)
+{
+    if (!text || !dictid) {
+        Error("SendMonitoringInfo", "Null pointer passed as argument");
+        return FALSE;
+    }
+
+    ClientRequest setRequest;
+
+    memset(&setRequest, 0, sizeof(ClientRequest));
+
+    fConnModule->SetSID(setRequest.header.streamid);
+
+    setRequest.set.requestid = kXR_set;
+
+    XrdOucString msg("monitor info ");
+    msg += text;
+
+    setRequest.set.dlen = msg.length();
+
+    bool ok = fConnModule->SendGenCommand(&setRequest, msg.c_str(), 0, dictid,
+                                          FALSE, (char *)"SendMonitoringInfo");
+
+    if (ok && (fConnModule->LastServerResp.status == 0)) {
+        *dictid = ntohl(*dictid);
+        Info(XrdClientDebug::kHIDEBUG,
+             "SendMonitoringInfo", "Returned dictid=" << *dictid);
+    }
+
+    return ok;
+}
+
+//_____________________________________________________________________________
 bool XrdClient::Stat(struct XrdClientStatInfo *stinfo, bool force) {
 
     if (!force && fStatInfo.stated) {
diff -Naur xrootd-3.1.0/src/XrdClient/XrdClient.hh xrootd-mt/src/XrdClient/XrdClient.hh
--- xrootd-3.1.0/src/XrdClient/XrdClient.hh	2011-10-21 07:19:29.000000000 -0700
+++ xrootd-mt/src/XrdClient/XrdClient.hh	2012-02-16 14:28:16.005295103 -0800
@@ -253,6 +253,10 @@
     //  (if any!!)
     XReqErrorType               Read_Async(long long offset, int len, bool updatecounters=true);
 
+    // Send monitoring information text. This will injected into the monitoring
+    // stream of the server. Return dictionary id associated with the request.
+    bool                        SendMonitoringInfo(const char *text, kXR_unt32 *dictid);
+
     // Get stat info about the file. Normally it tries to guess the file size variations
     // unless force==true
     bool                        Stat(struct XrdClientStatInfo *stinfo, bool force = false);
